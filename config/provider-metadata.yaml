name: ovh/ovh
resources:
    OVH:
        subCategory: ""
        description: The OVH provider is used to interact with the many resources supported by OVHcloud. The provider needs to be configured with the proper credentials before it can be used.
        name: OVH
        title: OVH
        argumentDocs:
            OVH_CLOUD_PROJECT_DATABASE_ENGINE_TEST: '- The name of the database engine to test.'
            OVH_CLOUD_PROJECT_DATABASE_FLAVOR_TEST: '- The node flavor of the database service to test.'
            OVH_CLOUD_PROJECT_DATABASE_IP_RESTRICTION_IP_TEST: '- The IP restriction to test.'
            OVH_CLOUD_PROJECT_DATABASE_KAFKA_VERSION_TEST: '- The version of the kafka to test. if not set OVH_CLOUD_PROJECT_DATABASE_VERSION_TEST is use.'
            OVH_CLOUD_PROJECT_DATABASE_M3DB_VERSION_TEST: '- The version of the M3DB to test. if not set OVH_CLOUD_PROJECT_DATABASE_VERSION_TEST is use.'
            OVH_CLOUD_PROJECT_DATABASE_MONGODB_VERSION_TEST: '- The version of the mongodb to test. if not set OVH_CLOUD_PROJECT_DATABASE_VERSION_TEST is use.'
            OVH_CLOUD_PROJECT_DATABASE_OPENSEARCH_VERSION_TEST: '- The version of the opensearch to test. if not set OVH_CLOUD_PROJECT_DATABASE_VERSION_TEST is use.'
            OVH_CLOUD_PROJECT_DATABASE_POSTGRESQL_VERSION_TEST: '- The version of the postgresql to test. if not set OVH_CLOUD_PROJECT_DATABASE_VERSION_TEST is use.'
            OVH_CLOUD_PROJECT_DATABASE_REDIS_VERSION_TEST: '- The version of the redis to test. if not set OVH_CLOUD_PROJECT_DATABASE_VERSION_TEST is use.'
            OVH_CLOUD_PROJECT_DATABASE_REGION_TEST: '- The region of the database service to test.'
            OVH_CLOUD_PROJECT_DATABASE_VERSION_TEST: '- The version of the database engine to test.'
            OVH_CLOUD_PROJECT_FAILOVER_IP_ROUTED_TO_1_TEST: '- The GUID of an instance to which failover IP addresses can be attached'
            OVH_CLOUD_PROJECT_FAILOVER_IP_ROUTED_TO_2_TEST: '- The GUID of a secondary instance to which failover IP addresses can be attached. There must be 2 as associations can only be updated not removed. To test effectively, the failover ip address must be moved between instances'
            OVH_CLOUD_PROJECT_FAILOVER_IP_TEST: '- The ip address of your public cloud failover ip.'
            OVH_CLOUD_PROJECT_KUBE_REGION_TEST: '- The region of your public cloud kubernetes project.'
            OVH_CLOUD_PROJECT_KUBE_VERSION_TEST: '- The version of your public cloud kubernetes project.'
            OVH_CLOUD_PROJECT_SERVICE_TEST: '- The ID of your public cloud project.'
            OVH_DBAAS_LOGS_SERVICE_TEST: '- The name of your Dbaas logs service.'
            OVH_ENDPOINT: '- possible value are: ovh-eu, ovh-ca, ovh-us, soyoustart-eu, soyoustart-ca, kimsufi-ca, kimsufi-eu, runabove-ca'
            OVH_IP_TEST: ', OVH_IP_BLOCK_TEST, OVH_IP_REVERSE_TEST - The values you have to set for testing ip reverse resources.'
            OVH_IPLB_SERVICE_TEST: '- The ID of the IP Load Balancer to use'
            OVH_TESTACC_IP: '- set this variable to "yes" will order public ip blocks.'
            OVH_TESTACC_ORDER_CLOUDPROJECT: '- set this variable to "yes" will order cloud projects.'
            OVH_TESTACC_ORDER_DOMAIN: '- set this variable to "mydomain.ovh" to run tests for domain zones.'
            OVH_TESTACC_ORDER_IPLOADBALANCING: '- set this variable to "yes" will order ip loadbalancing.'
            OVH_TESTACC_ORDER_VRACK: '- set this variable to "yes" will order vracks.'
            OVH_VRACK_SERVICE_TEST: '- The ID of the vRack to use.'
            OVH_ZONE_TEST: '- The domain you own to test the domain_zone resource.'
            application_key: |-
                - (Optional) The API Application Key. If omitted,
                the OVH_APPLICATION_KEY environment variable is used.
            application_secret: |-
                - (Optional) The API Application Secret. If omitted,
                the OVH_APPLICATION_SECRET environment variable is used.
            consumer_key: |-
                - (Optional) The API Consumer key. If omitted,
                the OVH_CONSUMER_KEY environment variable is used.
            endpoint: |-
                - (Required) Specify which API endpoint to use.
                It can be set using the OVH_ENDPOINT environment
                variable. e.g. ovh-eu or ovh-ca.
        importStatements: []
    cloud_project_capabilities_containerregistry:
        subCategory: ""
        description: Get the list of container registry capabilities associated with a public cloud project.
        name: cloud_project_capabilities_containerregistry
        title: cloud_project_capabilities_containerregistry
        argumentDocs:
            code: '- Plan code from the catalog'
            created_at: '- Plan creation date'
            features: '- Features of the plan'
            id: '- Plan ID'
            image_storage: '- Docker image storage limits in bytes'
            name: '- Plan name'
            parallel_request: '- Parallel requests on Docker image API (/v2 Docker registry API)'
            plans: '- Available plans in the region'
            region_name: '- The region name'
            registry_limits: '- Container registry limits'
            result: '- List of container registry capability for a single region'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            updated_at: '- Plan last update date'
            vulnerability: '- Vulnerability scanning'
        importStatements: []
    cloud_project_capabilities_containerregistry_filter:
        subCategory: ""
        description: Filter the list of container registry capabilities associated with a public cloud project to match one and only one capability.
        name: cloud_project_capabilities_containerregistry_filter
        title: cloud_project_capabilities_containerregistry_filter
        argumentDocs:
            code: '- Plan code from the catalog'
            created_at: '- Plan creation date'
            features: '- Features of the plan'
            id: '- Plan ID'
            image_storage: '- Docker image storage limits in bytes'
            name: '- Plan name'
            parallel_request: '- Parallel requests on Docker image API (/v2 Docker registry API)'
            plan_name: '- The plan name. It can be ''SMALL'', ''MEDIUM'' or ''LARGE''.'
            region: '- The region name'
            registry_limits: '- Container registry limits'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            updated_at: '- Plan last update date'
            vulnerability: '- Vulnerability scanning'
        importStatements: []
    cloud_project_containerregistries:
        subCategory: ""
        description: Get the list of container registries associated with a public cloud project.
        name: cloud_project_containerregistries
        title: cloud_project_containerregistries
        argumentDocs:
            created_at: '- Registry creation date'
            id: '- Registry ID'
            name: '- Registry name'
            project_id: '- Project ID of your registry'
            region: '- Region of the registry'
            result: '- The list of container registries associated with the project.'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            size: '- Current size of the registry (bytes)'
            status: '- Registry status'
            updated_at: '- Registry last update date'
            url: '- Access url of the registry'
            version: '- Version of your registry'
        importStatements: []
    cloud_project_containerregistry:
        subCategory: ""
        description: Get information about a container registry associated with a public cloud project.
        name: cloud_project_containerregistry
        title: cloud_project_containerregistry
        argumentDocs:
            created_at: '- Registry creation date'
            id: '- Registry ID'
            name: '- Registry name'
            project_id: '- Project ID of your registry'
            region: '- Region of the registry'
            registry_id: '- Registry ID'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            size: '- Current size of the registry (bytes)'
            status: '- Registry status'
            updated_at: '- Registry last update date'
            url: '- Access url of the registry'
            version: '- Version of your registry'
        importStatements: []
    cloud_project_containerregistry_users:
        subCategory: ""
        description: Get the list of users of a container registry associated with a public cloud project.
        name: cloud_project_containerregistry_users
        title: cloud_project_containerregistry_users
        argumentDocs:
            email: '- User email'
            id: '- User ID'
            registry_id: '- Registry ID'
            result: '- The list of users of the container registry associated with the project.'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            user: '- User name'
        importStatements: []
    cloud_project_database:
        subCategory: ""
        description: Get information about a managed database cluster in a public cloud project.
        name: cloud_project_database
        title: cloud_project_database
        argumentDocs:
            backup_time: '- Time on which backups start every day.'
            component: '- Type of component the URI relates to.'
            created_at: '- Date of the creation of the cluster.'
            description: '- Small description of the database service.'
            domain: '- Domain of the cluster.'
            endpoints: '- List of all endpoints objects of the service.'
            engine: |-
                - (Required) The database engine you want to get information. To get a full list of available engine visit:
                public documentation.
            flavor: '- A valid OVHcloud public cloud database flavor name in which the nodes will be started.'
            id: '- (Required) Cluster ID'
            kafka_rest_api: '- Defines whether the REST API is enabled on a kafka cluster.'
            maintenance_time: '- Time on which maintenances can start every day.'
            network_id: '- Private network id in which the node should be deployed. It''s the regional openstackId of the private network'
            network_type: '- Type of network of the cluster.'
            nodes: '- List of nodes object.'
            path: '- Path of the endpoint.'
            plan: '- Plan of the cluster.'
            port: '- Connection port for the endpoint.'
            region: '- Public cloud region in which the node should be deployed.'
            scheme: '- Scheme used to generate the URI.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            ssl: '- Defines whether the endpoint uses SSL.'
            ssl_mode: '- SSL mode used to connect to the service if the SSL is enabled.'
            status: '- Current status of the cluster.'
            subnet_id: '-  Private subnet ID in which the node is.'
            uri: '- URI of the endpoint.'
            version: '- The version of the engine in which the service should be deployed'
        importStatements: []
    cloud_project_database_capabilities:
        subCategory: ""
        description: Get information about capabilities of a public cloud project.
        name: cloud_project_database_capabilities
        title: cloud_project_database_capabilities
        argumentDocs:
            backup_retention: '- Automatic backup retention duration.'
            core: '- Flavor core number.'
            default_version: '- Default version used for the engine.'
            description: '- Description of the engine.'
            engines: '- Database engines available.'
            flavors: '- Flavors available.'
            memory: '- Flavor ram size in GB.'
            name: '- Engine name.'
            options: '- Options available.'
            plans: '- Plans available.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            ssl_modes: '- SSL modes for this engine.'
            storage: '- Flavor disk size in GB.'
            type: '- Type of the option.'
            versions: '- Versions available for this engine.'
        importStatements: []
    cloud_project_database_certificates:
        subCategory: ""
        description: Get information about certificates of a cluster associated with a public cloud project.
        name: cloud_project_database_certificates
        title: cloud_project_database_certificates
        argumentDocs:
            ca: '- CA certificate used for the service.'
            cluster_id: '- (Required) Cluster ID'
            engine: |-
                - (Required) The engine of the database cluster you want database information. To get a full list of available engine visit:
                public documentation.
                Available engines:
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_database:
        subCategory: ""
        description: Get information about a database of a database cluster associated with a public cloud project.
        name: cloud_project_database_database
        title: cloud_project_database_database
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            created_at: '- Date of the creation of the database.'
            default: '- Defines if the database has been created by default.'
            engine: |-
                - (Required) The engine of the database cluster you want database information. To get a full list of available engine visit:
                public documentation.
                Available engines:
            id: '- ID of the database.'
            name: '- (Required) Name of the database.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_databases:
        subCategory: ""
        description: Get the list of databases of a database cluster associated with a public cloud project.
        name: cloud_project_database_databases
        title: cloud_project_database_databases
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            database_ids: '- The list of databases ids of the database cluster associated with the project.'
            engine: |-
                - (Required) The engine of the database cluster you want to list databases. To get a full list of available engine visit:
                public documentation.
                Available engines:
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_integration:
        subCategory: ""
        description: Get information about an integration of a database cluster associated with a public cloud project.
        name: cloud_project_database_integration
        title: cloud_project_database_integration
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            destination_service_id: '- ID of the destination service.'
            engine: |-
                - (Required, Forces new resource) The engine of the database cluster you want to add. You can find the complete list of available engine in the public documentation.
                All engines available exept mongodb
            id: '- (Required) Integration ID'
            parameters: '- Parameters for the integration.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            source_service_id: '- ID of the source service.'
            status: '- Current status of the integration.'
            type: '- Type of the integration.'
        importStatements: []
    cloud_project_database_integrations:
        subCategory: ""
        description: Get the list of integrations of a database cluster associated with a public cloud project.
        name: cloud_project_database_integrations
        title: cloud_project_database_integrations
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            engine: |-
                - (Required) The engine of the database cluster you want to list integrations. To get a full list of available engine visit:
                public documentation.
                All engines available exept mongodb
            integration_ids: '- The list of integrations ids of the database cluster associated with the project.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_ip_restrictions:
        subCategory: ""
        description: Get the list of IP restrictions associated with a public cloud project.
        name: cloud_project_database_ip_restrictions
        title: cloud_project_database_ip_restrictions
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            engine: |-
                - (Required) The engine of the database cluster you want to list IP restrictions. To get a full list of available engine visit:
                public documentation.
            ips: '- The list of IP restriction of the database associated with the project.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_kafka_acl:
        subCategory: ""
        description: Get information about an ACL of a kafka cluster associated with a public cloud project.
        name: cloud_project_database_kafka_acl
        title: cloud_project_database_kafka_acl
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            id: '- (Required) ACL ID'
            permission: '- Permission to give to this username on this topic.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            topic: '- Topic affected by this ACL.'
            username: '- Username affected by this ACL.'
        importStatements: []
    cloud_project_database_kafka_acls:
        subCategory: ""
        description: Get the list of ACLS of a kafka cluster associated with a public cloud project.
        name: cloud_project_database_kafka_acls
        title: cloud_project_database_kafka_acls
        argumentDocs:
            acl_ids: '- The list of ACLs ids of the kafka cluster associated with the project.'
            cluster_id: '- (Required) Cluster ID'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_kafka_topic:
        subCategory: ""
        description: Get information about a topic of a kafka cluster associated with a public cloud project.
        name: cloud_project_database_kafka_topic
        title: cloud_project_database_kafka_topic
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            id: '- (Required) Topic ID'
            min_insync_replicas: '- Minimum insync replica accepted for this topic.'
            name: '- Name of the topic.'
            partitions: '- Number of partitions for this topic.'
            replication: '- Number of replication for this topic.'
            retention_bytes: '- Number of bytes for the retention of the data for this topic. Inferior to 0 mean Unlimited'
            retention_hours: '- Number of hours for the retention of the data for this topic. Inferior to 0 mean Unlimited'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_kafka_topics:
        subCategory: ""
        description: Get the list of topics of a kafka cluster associated with a public cloud project.
        name: cloud_project_database_kafka_topics
        title: cloud_project_database_kafka_topics
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            topic_ids: '- The list of topics ids of the kafka cluster associated with the project.'
        importStatements: []
    cloud_project_database_kafka_user_acces:
        subCategory: ""
        description: Get information about user acces of a kafka cluster associated with a public cloud project.
        name: cloud_project_database_kafka_user_acces
        title: cloud_project_database_kafka_user_acces
        argumentDocs:
            cert: '- User cert.'
            cluster_id: '- (Required) Cluster ID'
            key: '- (Sensitive) User key for the cert.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            user_id: '- (Required) User ID'
        importStatements: []
    cloud_project_database_m3db_namespace:
        subCategory: ""
        description: Get information about a namespace of a M3DB cluster associated with a public cloud project.
        name: cloud_project_database_m3db_namespace
        title: cloud_project_database_m3db_namespace
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            id: '- ID of the namespace.'
            name: '- (Required, Forces new resource) Name of the namespace.'
            resolution: '- Resolution for an aggregated namespace.'
            retention_block_data_expiration_duration: '- Controls how long we wait before expiring stale data.'
            retention_block_size_duration: '- Controls how long to keep a block in memory before flushing to a fileset on disk.'
            retention_buffer_future_duration: '- Controls how far into the future writes to the namespace will be accepted.'
            retention_buffer_past_duration: '- Controls how far into the past writes to the namespace will be accepted.'
            retention_period_duration: '- Controls the duration of time that M3DB will retain data for the namespace.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            snapshot_enabled: '- SDefines whether M3db will create snapshot files for this namespace.'
            type: '- Type of namespace.'
            writes_to_commit_log_enabled: '- Defines whether M3DB will include writes to this namespace in the commit log.'
        importStatements: []
    cloud_project_database_m3db_namespaces:
        subCategory: ""
        description: Get the list of namespaces of a M3DB cluster associated with a public cloud project.
        name: cloud_project_database_m3db_namespaces
        title: cloud_project_database_m3db_namespaces
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            namespace_ids: '- The list of namespaces ids of the M3DB cluster associated with the project.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_m3db_user:
        subCategory: ""
        description: Get information about a user of a M3DB cluster associated with a public cloud project.
        name: cloud_project_database_m3db_user
        title: cloud_project_database_m3db_user
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            created_at: '- Date of the creation of the user.'
            group: '- See Argument Reference above.'
            id: '- ID of the user.'
            name: '- (Required, Forces new resource) Name of the user.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
        importStatements: []
    cloud_project_database_mongodb_user:
        subCategory: ""
        description: Get information about a user of a mongodb cluster associated with a public cloud project.
        name: cloud_project_database_mongodb_user
        title: cloud_project_database_mongodb_user
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            created_at: '- Date of the creation of the user.'
            id: '- ID of the user.'
            name: '- (Required) Name of the user with the authentication database in the format name@authDB, for example: johndoe@admin'
            roles: '- Roles the user belongs to'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
        importStatements: []
    cloud_project_database_opensearch_pattern:
        subCategory: ""
        description: Get information about a pattern of a opensearch cluster associated with a public cloud project.
        name: cloud_project_database_opensearch_pattern
        title: cloud_project_database_opensearch_pattern
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            id: '- (Required) Pattern ID.'
            max_index_count: '- Maximum number of index for this pattern.'
            pattern: '- Pattern format.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_opensearch_patterns:
        subCategory: ""
        description: Get the list of patterns of a opensearch cluster associated with a public cloud project.
        name: cloud_project_database_opensearch_patterns
        title: cloud_project_database_opensearch_patterns
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            pattern_ids: '- The list of patterns ids of the opensearch cluster associated with the project.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_database_opensearch_user:
        subCategory: ""
        description: Get information about a user of a opensearch cluster associated with a public cloud project.
        name: cloud_project_database_opensearch_user
        title: cloud_project_database_opensearch_user
        argumentDocs:
            acls: '- Acls of the user.'
            cluster_id: '- (Required) Cluster ID'
            created_at: '- Date of the creation of the user.'
            id: '- ID of the user.'
            name: '- (Required) Name of the user.'
            pattern: '- Pattern of the ACL.'
            permission: '- Permission of the ACL.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
        importStatements: []
    cloud_project_database_postgresql_user:
        subCategory: ""
        description: Get information about a user of a postgresql cluster associated with a public cloud project.
        name: cloud_project_database_postgresql_user
        title: cloud_project_database_postgresql_user
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            created_at: '- Date of the creation of the user.'
            id: '- ID of the user.'
            name: '- (Required) Name of the user.'
            roles: '- Roles the user belongs to.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
        importStatements: []
    cloud_project_database_redis_user:
        subCategory: ""
        description: Get information about a user of a redis cluster associated with a public cloud project.
        name: cloud_project_database_redis_user
        title: cloud_project_database_redis_user
        argumentDocs:
            categories: '- Categories of the user.'
            channels: '- Channels of the user.'
            cluster_id: '- (Required) Cluster ID'
            commands: '- Commands of the user.'
            created_at: '- Date of the creation of the user.'
            id: '- ID of the user.'
            keys: '- Keys of the user.'
            name: '- (Required) Name of the user'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
        importStatements: []
    cloud_project_database_user:
        subCategory: ""
        description: Get information about a user of a database cluster associated with a public cloud project.
        name: cloud_project_database_user
        title: cloud_project_database_user
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            created_at: '- Date of the creation of the user.'
            engine: |-
                - (Required) The engine of the database cluster you want user information. To get a full list of available engine visit :
                public documentation.
                Available engines:
            id: '- ID of the user.'
            name: '- (Required) Name of the user.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
        importStatements: []
    cloud_project_database_users:
        subCategory: ""
        description: Get the list of users of a database cluster associated with a public cloud project.
        name: cloud_project_database_users
        title: cloud_project_database_users
        argumentDocs:
            cluster_id: '- (Required) Cluster ID'
            engine: |-
                - (Required) The engine of the database cluster you want to list users. To get a full list of available engine visit:
                public documentation.
                Available engines:
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            user_ids: '- The list of users ids of the database cluster associated with the project.'
        importStatements: []
    cloud_project_databases:
        subCategory: ""
        description: Get the list of managed database cluster associated with a public cloud project.
        name: cloud_project_databases
        title: cloud_project_databases
        argumentDocs:
            cluster_ids: '- The list of managed databases ids of the project.'
            engine: |-
                - (Required) The database engine you want to list. To get a full list of available engine visit:
                public documentation.
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_failover_ip_attach:
        subCategory: ""
        description: Reads failover ip addresses for a service
        name: cloud_project_failover_ip_attach
        title: cloud_project_failover_ip_attach
        argumentDocs:
            block: '- The IP block'
            continentCode: '- The Ip continent'
            geoloc: '- The Ip location'
            id: '- The Ip id'
            ip: '- The failover ip address to query'
            progress: '- Current operation progress in percent'
            routedTo: '- Instance where ip is routed to'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Ip status, can be ok or operationPending'
            subType: '- IP sub type, can be cloud or ovh'
        importStatements: []
    cloud_project_kube:
        subCategory: ""
        description: Get information & status of a Kubernetes managed cluster in a public cloud project.
        name: cloud_project_kube
        title: cloud_project_kube
        argumentDocs:
            control_plane_is_up_to_date: '- True if control-plane is up to date.'
            customization: '- Customer customization object'
            is_up_to_date: '- True if all nodes and control-plane are up to date.'
            kube_id: '- The id of the managed kubernetes cluster.'
            name: '- The name of the managed kubernetes cluster.'
            next_upgrade_versions: '- Kubernetes versions available for upgrade.'
            nodes_url: '- Cluster nodes URL.'
            private_network_id: '- OpenStack private network (or vrack) ID to use.'
            region: '- The OVHcloud public cloud region ID of the managed kubernetes cluster.'
            service_name: |-
                - (Optional) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Cluster status. Should be normally set to ''READY''.'
            update_policy: '- Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]''.'
            url: '- Management URL of your cluster.'
            version: '- Kubernetes version of the managed kubernetes cluster.'
        importStatements: []
    cloud_project_kube_iprestrictions:
        subCategory: ""
        description: Get information & status of a Kubernetes managed cluster IP restrictions in a public cloud project.
        name: cloud_project_kube_iprestrictions
        title: cloud_project_kube_iprestrictions
        argumentDocs:
            ips: '- The list of CIDRs that restricts the access to the API server.'
            kube_id: '- The id of the managed kubernetes cluster.'
            service_name: |-
                - (Optional) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_kube_nodepool:
        subCategory: ""
        description: Get information & status of a Kubernetes managed node pool in a public cloud project.
        name: cloud_project_kube_nodepool
        title: cloud_project_kube_nodepool
        argumentDocs:
            anti_affinity: '- (Optional) should the pool use the anti-affinity feature. Default to false.'
            autoscale: '- (Optional) Enable auto-scaling for the pool. Default to false.'
            available_nodes: '- Number of nodes which are actually ready in the pool'
            created_at: '- Creation date'
            current_nodes: '- Number of nodes present in the pool'
            desired_nodes: '- number of nodes to start.'
            flavor: '- Flavor name'
            flavor_name: |-
                - a valid OVHcloud public cloud flavor ID in which the nodes will be started.
                Ex: "b2-7". Changing this value recreates the resource.
                You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/
            kube_id: '- The id of the managed kubernetes cluster.'
            max_nodes: |-
                - maximum number of nodes allowed in the pool.
                Setting desired_nodes over this value will raise an error.
            min_nodes: |-
                - minimum number of nodes allowed in the pool.
                Setting desired_nodes under this value will raise an error.
            monthly_billed: '- (Optional) should the nodes be billed on a monthly basis. Default to false.'
            name: '- The name of the node pool.'
            project_id: '- Project id'
            service_name: |-
                - (Optional) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            size_status: '- Status describing the state between number of nodes wanted and available ones'
            status: '- Current status'
            up_to_date_nodes: '- Number of nodes with the latest version installed in the pool'
            updated_at: '- Last update date'
        importStatements: []
    cloud_project_region:
        subCategory: ""
        description: Get information & status of a region associated with a public cloud project.
        name: cloud_project_region
        title: cloud_project_region
        argumentDocs:
            continent_code: |-
                - the code of the geographic continent the region is running.
                E.g.: EU for Europe, US for America...
            datacenter_location: |-
                - The location code of the datacenter.
                E.g.: "GRA", meaning Gravelines, for region "GRA1"
            name: |-
                - (Required) The name of the region associated with the public cloud
                project.
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            services: '- The list of public cloud services running within the region'
            status: '- the status of the service'
        importStatements: []
    cloud_project_regions:
        subCategory: ""
        description: Get the list of regions associated with a public cloud project.
        name: cloud_project_regions
        title: cloud_project_regions
        argumentDocs:
            has_services_up: |-
                - (Optional) List of services which has to be UP in regions.
                Example: "image", "instance", "network", "storage", "volume", "workflow", ...
                If left blank, returns all regions associated with the service_name.
            names: '- The list of regions associated with the project, filtered by services UP.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    cloud_project_user_s3_credential:
        subCategory: ""
        description: Get the Secret Access Key of an Access Key ID of a public cloud project's user.
        name: cloud_project_user_s3_credential
        title: cloud_project_user_s3_credential
        argumentDocs:
            access_key_id: '- the Access Key ID'
            secret_access_key: '- (Sensitive) the Secret Access Key'
            service_name: |-
                - (Required) The ID of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            user_id: '- (Required) The ID of a public cloud project''s user.'
        importStatements: []
    cloud_project_user_s3_credentials:
        subCategory: ""
        description: Get the list of Access Key ID of a public cloud project's user.
        name: cloud_project_user_s3_credentials
        title: cloud_project_user_s3_credentials
        argumentDocs:
            access_key_ids: '- The list of the Access Key ID associated with this user.'
            service_name: |-
                - (Required) The ID of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            user_id: '- (Required) The ID of a public cloud project''s user.'
        importStatements: []
    cloud_region:
        subCategory: ""
        description: Get information & status of a dedicated CEPH instance.
        name: cloud_region
        title: cloud_region
        argumentDocs:
            ceph_mons: '- list of CEPH monitors IPs'
            ceph_version: '- CEPH cluster version'
            crush_tunables: '- CRUSH algorithm settings. Possible values'
            label: '- CEPH cluster label'
            region: '- cluster region'
            service_name: '- (Required) The service name of the dedicated CEPH cluster.'
            size: '- Cluster size in TB'
            state: '- the state of the cluster'
            status: '- the status of the service'
        importStatements: []
    dbaas_logs_input_engine:
        subCategory: ""
        description: Get information & status of a DBaas logs input engine.
        name: dbaas_logs_input_engine
        title: dbaas_logs_input_engine
        argumentDocs:
            is_deprecated: '- Indicates if engine will soon not be supported.'
            name: '- The name of the logs input engine.'
            version: '- Software version'
        importStatements: []
    dbaas_logs_output_graylog_stream:
        subCategory: ""
        description: Get information & status of a DBaas logs output graylog stream.
        name: dbaas_logs_output_graylog_stream
        title: dbaas_logs_output_graylog_stream
        argumentDocs:
            cold_storage_compression: '- Cold storage compression method'
            cold_storage_content: '- ColdStorage content'
            cold_storage_enabled: '- Is Cold storage enabled?'
            cold_storage_notify_enabled: '- Notify on new Cold storage archive'
            cold_storage_retention: '- Cold storage retention in year'
            cold_storage_target: '- ColdStorage destination'
            created_at: '- Stream creation'
            description: '- Stream description'
            indexing_enabled: '- Enable ES indexing'
            indexing_max_size: '- Maximum indexing size (in GB)'
            indexing_notify_enabled: '- If set, notify when size is near 80, 90 or 100 % of the maximum configured setting'
            is_editable: '- Indicates if you are allowed to edit entry'
            is_shareable: '- Indicates if you are allowed to share entry'
            nb_alert_condition: '- Number of alert condition'
            nb_archive: '- Number of coldstored archives'
            parent_stream_id: '- Parent stream ID'
            pause_indexing_on_max_size: '- If set, pause indexing when maximum size is reach'
            retention_id: '- Retention ID'
            service_name: '- The service name'
            stream_id: '- Stream ID'
            title: '- Stream description'
            updated_at: '- Stream last update'
            web_socket_enabled: '- Enable Websocket'
        importStatements: []
    dedicated_installation_templates:
        subCategory: ""
        description: Get the list of installation templates available for dedicated servers.
        name: dedicated_installation_templates
        title: dedicated_installation_templates
        argumentDocs:
            result: '- The list of installation templates IDs available for dedicated servers.'
        importStatements: []
    dedicated_server:
        subCategory: ""
        description: Get information of a dedicated server associated with your OVHcloud Account.
        name: dedicated_server
        title: dedicated_server
        argumentDocs:
            boot_id: '- boot id of the server'
            commercial_range: '- dedicater server commercial range'
            datacenter: '- dedicated datacenter localisation (bhs1,bhs2,...)'
            enabled: '- VirtualNetworkInterface activation state'
            enabled_public_vnis: '- List of enabled public VNI uuids'
            enabled_vrack_aggregation_vnis: '- List of enabled vrack_aggregation VNI uuids'
            enabled_vrack_vnis: '- List of enabled vrack VNI uuids'
            ip: '- dedicated server ip (IPv4)'
            ips: '- dedicated server ip blocks'
            link_speed: '- link speed of the server'
            mode: '- VirtualNetworkInterface mode (public,vrack,vrack_aggregation)'
            monitoring: '- Icmp monitoring state'
            name: '- dedicated server name'
            ncis: '- NetworkInterfaceControllers bound to this VirtualNetworkInterface'
            os: '- Operating system'
            professional_use: '- Does this server have professional use option'
            rack: '- rack id of the server'
            rescue_mail: '- rescue mail of the server'
            reverse: '- dedicated server reverse'
            root_device: '- root device of the server'
            server_id: '- your server id'
            server_name: '- Server bound to this VirtualNetworkInterface'
            service_name: '- (Required) The service_name of your dedicated server.'
            state: '- error, hacked, hackedBlocked, ok'
            support_level: '- Dedicated server support level (critical, fastpath, gs, pro)'
            uuid: '- VirtualNetworkInterface unique id'
            vnis: '- the list of Virtualnetworkinterface assiociated with this server'
            vrack: '- vRack name'
        importStatements: []
    dedicated_server_boots:
        subCategory: ""
        description: Get the list of compatible netboots for a dedicated server associated with your OVHcloud Account.
        name: dedicated_server_boots
        title: dedicated_server_boots
        argumentDocs:
            boot_type: '- (Optional) Filter the value of bootType property (harddisk, rescue, ipxeCustomerScript, internal, network)'
            result: '- The list of dedicated server netboots.'
            service_name: '- (Required) The internal name of your dedicated server.'
        importStatements: []
    dedicated_servers:
        subCategory: ""
        description: Get the list of dedicated servers associated with your OVHcloud Account.
        name: dedicated_servers
        title: dedicated_servers
        argumentDocs:
            result: '- The list of dedicated servers IDs associated with your OVHcloud Account.'
        importStatements: []
    domain_zone:
        subCategory: ""
        description: Get information & status of a domain zone.
        name: domain_zone
        title: domain_zone
        argumentDocs:
            dnssec_supported: '- Is DNSSEC supported by this zone'
            has_dns_anycast: '- hasDnsAnycast flag of the DNS zone'
            last_update: '- Last update date of the DNS zone'
            name: '- (Required) The name of the domain zone.'
            name_servers: '- Name servers that host the DNS zone'
        importStatements: []
    ip_service:
        subCategory: ""
        description: Get information & status of a ip service.
        name: ip_service
        title: ip_service
        argumentDocs:
            id.can_be_terminated: '- can be terminated'
            id.country: '- country'
            id.description: '- Custom description on your ip'
            id.ip: '- ip block'
            id.organisation_id: '- IP block organisation Id'
            id.routed_to: '- Routage information'
            id.type: '- Possible values for ip type (    "cdn", "cloud", "dedicated", "failover", "hosted_ssl", "housing", "loadBalancing", "mail", "overthebox", "pcc", "pci", "private", "vpn", "vps", "vrack", "xdsl")'
            service_name: '- The service name'
        importStatements: []
    iploadbalancing:
        subCategory: ""
        description: Get information & status of an IP Load Balancing product.
        name: iploadbalancing
        title: iploadbalancing
        argumentDocs:
            display_name: '- the name displayed in ManagerV6 for your iplb (max 50 chars)'
            ip_loadbalancing: '- Your IP load balancing'
            ipv4: '- The IPV4 associated to your IP load balancing'
            ipv6: '- The IPV6 associated to your IP load balancing'
            metrics_token: |-
                - The metrics token associated with your IP load balancing
                This attribute is sensitive.
            name: '- The zone three letter code'
            offer: '- The offer of your IP load balancing'
            orderable_zone: '- Available additional zone for your Load Balancer'
            plan_code: '- The billing planCode for this zone'
            service_name: '- The internal name of your IP load balancing'
            ssl_configuration: |-
                - Modern oldest compatible clients : Firefox 27, Chrome 30,
                IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8.
                Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5,
                Safari 1, Windows XP IE8, Android 2.3, Java 7.
                Can take any of the following value: "intermediate", "modern"
            state: |-
                - Current state of your IP. Can take any of the following value:
                "blacklisted", "deleted", "free", "ok", "quarantined", "suspended"
            vrack_eligibility: '- Vrack eligibility. Takes a boolean value.'
            vrack_name: |-
                - Name of the vRack on which the current Load Balancer is
                attached to, as it is named on vRack product
            zone: '- Location where your service is. This takes an array of values.'
        importStatements: []
    iploadbalancing_http_farm:
        subCategory: ""
        description: Creates a backend server group (farm).
        name: iploadbalancing_http_farm
        title: iploadbalancing_http_farm
        argumentDocs:
            balance: '- Load balancing algorithm. roundrobin if null (first, leastconn, roundrobin, source)'
            display_name: '- Readable label for loadbalancer farm'
            force_ssl: '- Force use of SSL (TLS)'
            interval: '- probe interval, Value between 30 and 3600 seconds, default 30'
            match: '- What to match pattern against (contains, default, internal, matches, status)'
            method: '- HTTP probe method (GET, HEAD, OPTIONS, internal)'
            negate: '- Negate probe result'
            pattern: '- Pattern to match against match'
            port: '- Port attached to your farm ([1..49151]). Inherited from frontend if null'
            probe: '- define a backend healthcheck probe'
            service_name: '- (Required) The internal name of your IP load balancing'
            stickiness: "- \tStickiness type. No stickiness if null (sourceIp, cookie)"
            type: '- (Required) Valid values : http, internal, mysql, oco, pgsql, smtp, tcp'
            url: '- URL for HTTP probe type.'
            vrack_network_id: '- Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack'
            zone: '- (Required) Zone where the farm will be defined (ie. GRA, BHS also supports ALL)'
        importStatements: []
    iploadbalancing_http_farm_server:
        subCategory: ""
        description: Creates a backend server entry linked to farm.
        name: iploadbalancing_http_farm_server
        title: iploadbalancing_http_farm_server
        argumentDocs:
            address: '- Address of the backend server (IP from either internal or OVHcloud network)'
            backup: '- is it a backup server used in case of failure of all the non-backup backends'
            cookie: '- Value of the stickiness cookie used for this backend.'
            display_name: '- Label for the server'
            farm_id: '- ID of the farm this server is attached to'
            port: '- Port that backend will respond on'
            probe: '- defines if backend will be probed to determine health and keep as active in farm if healthy'
            proxy_protocol_version: '- version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (v1, v2, v2-ssl, v2-ssl-cn)'
            service_name: '- (Required) The internal name of your IP load balancing'
            ssl: '- is the connection ciphered with SSL (TLS)'
            status: '- backend status - active or inactive'
            weight: '- used in loadbalancing algorithm'
        importStatements: []
    iploadbalancing_http_frontend:
        subCategory: ""
        description: Creates a frontend for an IP Load balancing service.
        name: iploadbalancing_http_frontend
        title: iploadbalancing_http_frontend
        argumentDocs:
            allowed_source: '- Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.'
            dedicated_ipfo: '- Only attach frontend on these ip. No restriction if null. List of Ip blocks.'
            default_farm_id: '- Default TCP Farm of your frontend'
            default_ssl_id: '- Default ssl served to your customer'
            disabled: '- Disable your frontend. Default: ''false'''
            display_name: '- Human readable name for your frontend, this field is for you'
            id: '- Id of your frontend'
            port: |-
                - Port(s) attached to your frontend. Supports single port (numerical value),
                range (2 dash-delimited increasing ports) and comma-separated list of 'single port'
                and/or 'range'. Each port must be in the [1;49151] range
            redirect_location: '- Redirection HTTP'''
            service_name: '- (Required) The internal name of your IP load balancing'
            ssl: '- SSL deciphering. Default: ''false'''
            zone: '- (Required) Zone where the frontend will be defined (ie. gra, bhs also supports all)'
        importStatements: []
    me:
        subCategory: ""
        description: Get information about the current OVHcloud account
        name: me
        title: me
        argumentDocs:
            address: ': Postal address of the account'
            area: ': Area of the account'
            birth_city: ': City of birth'
            birth_day: ': Birth date'
            city: ': City of the account'
            code: ': Currency code used by this account (e.g EUR, USD, ...)'
            company_national_identification_number: ': This is the national identification number of the company that possess this account'
            corporation_type: ': Type of corporation'
            country: ': Country of the account'
            currency: ':'
            customer_code: ': The customer code of this account (a numerical value used for identification when contacting support via phone call)'
            email: ': Email address'
            fax: ': Fax number'
            firstname: ': First name'
            italian_sdi: ': Italian SDI'
            language: ': Preferred language for this account'
            legalform: ': Legal form of the account'
            name: ': Name of the account holder'
            national_identification_number: ': National Identification Number of this account'
            nichandle: ': Nic handle / customer identifier'
            organisation: ': Name of the organisation for this account'
            ovh_company: ': OVHcloud subsidiary'
            ovh_subsidiary: ': OVHcloud subsidiary'
            phone: ': Phone number'
            phone_country: ': Country code of the phone number'
            sex: ': Gender of the account holder'
            spare_email: ': Backup email address'
            state: ': State of the postal address'
            symbol: ': Currency symbol used by this account (e.g €, $, ...)'
            vat: ': VAT number'
            zip: ': Zipcode of the address'
        importStatements: []
    me_identity_user:
        subCategory: ""
        description: Get information about identity User.
        name: me_identity_user
        title: me_identity_user
        argumentDocs:
            creation: '- Creation date of this user.'
            description: '- User description.'
            email: '- User''s email.'
            group: '- User''s group.'
            last_update: '- Last update of this user.'
            login: '- User''s login suffix.'
            password_last_update: '- When the user changed his password for the last time.'
            status: '- Current user''s status.'
            user: '- (Required) User''s login.'
        importStatements: []
    me_identity_users:
        subCategory: ""
        description: Get the list of the identity users for the account.
        name: me_identity_users
        title: me_identity_users
        argumentDocs:
            users: '- The list of the user''s logins of all the identity users.'
        importStatements: []
    me_installation_template:
        subCategory: ""
        description: Get a custom installation template available for dedicated servers.
        name: me_installation_template
        title: me_installation_template
        argumentDocs:
            available_languages: ': List of all language available for this template.'
            beta: ': This distribution is new and, although tested and functional, may still display odd behaviour.'
            bit_format: ': This template bit format (32 or 64).'
            category: ': Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation).'
            change_log: ': (DEPRECATED) Template change log details.'
            custom_hostname: ': Set up the server using the provided hostname instead of the default hostname.'
            customization: ':'
            default_language: ': The default language of this template.'
            deprecated: ': is this distribution deprecated.'
            description: ': information about this template.'
            disks: ': Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id.'
            distribution: ': the distribution this template is based on.'
            family: ': this template family type (bsd,linux,solaris,windows).'
            filesystem: ': Partition filesystem.'
            filesystems: ': Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs).'
            hard_raid_configuration: ': This distribution supports hardware raid configuration through the OVHcloud API.'
            hardware_raid: ':'
            last_modification: ': Date of last modification of the base image.'
            mode: ': RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60).'
            mountpoint: ': partition mount point.'
            name: ': name of this partitioning scheme.'
            order: ': step or order. specifies the creation order of the partition on the disk'
            partition: ':'
            partition_scheme: ':'
            post_installation_script_link: ': Indicate the URL where your postinstall customisation script is located.'
            post_installation_script_return: ': indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is ''loh1Xee7eo OK OK OK UGh8Ang1Gu''.'
            priority: ': on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default, among all the compatible partitioning schemes (given the underlying hardware specifications).'
            raid: ': raid partition type.'
            rating: ': (DEPRECATED) Rating.'
            size: ': size of partition in MB, 0 => rest of the space.'
            ssh_key_name: ': Name of the ssh key that should be installed. Password login will be disabled.'
            step: ': Specifies the creation order of the hardware RAID.'
            supports_distribution_kernel: ': This distribution supports installation using the distribution''s native kernel instead of the recommended OVHcloud kernel.'
            supports_gpt_label: ': This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB.'
            supports_rtm: ': This distribution supports RTM software.'
            supports_sql_server: ': This distribution supports the microsoft SQL server.'
            supports_uefi: ': This distribution supports UEFI setup (no,only,yes).'
            template_name: ': This template name'
            type: ': partition type.'
            use_distribution_kernel: ': Use the distribution''s native kernel instead of the recommended OVHcloud Kernel.'
            volume_name: ': The volume name needed for proxmox distribution'
        importStatements: []
    me_installation_templates:
        subCategory: ""
        description: Get the list of custom installation templates available for dedicated servers.
        name: me_installation_templates
        title: me_installation_templates
        argumentDocs:
            result: '- The list of custom installation templates IDs available for dedicated servers.'
        importStatements: []
    me_ipxe_script:
        subCategory: ""
        description: Get information & status of an IPXE Script.
        name: me_ipxe_script
        title: me_ipxe_script
        argumentDocs:
            name: '- (Required) The name of the IPXE Script.'
            script: '- The content of the script.'
        importStatements: []
    me_ipxe_scripts:
        subCategory: ""
        description: Get the list of the IPXE Scripts of the account.
        name: me_ipxe_scripts
        title: me_ipxe_scripts
        argumentDocs:
            result: '- The list of the names of all the IPXE Scripts.'
        importStatements: []
    me_paymentmean_bankaccount:
        subCategory: ""
        description: Get information & status of an OVHcloud bank account payment mean
        name: me_paymentmean_bankaccount
        title: me_paymentmean_bankaccount
        argumentDocs:
            default: |-
                - a boolean which tells if the retrieved bank account
                is marked as the default payment mean
            description: '- the description attribute of the bank account'
            description_regexp: |-
                - (Optional) a regexp used to filter bank accounts
                on their description attributes.
            state: |-
                - (Optional) Filter bank accounts on their state attribute.
                Can be "blockedForIncidents", "valid", "pendingValidation"
            use_default: '- (Optional) Retrieve bank account marked as default payment mean.'
            use_oldest: |-
                - (Optional) Retrieve oldest bank account.
                project.
        importStatements: []
    me_paymentmean_creditcard:
        subCategory: ""
        description: Get information & status of an OVHcloud credit card payment mean
        name: me_paymentmean_creditcard
        title: me_paymentmean_creditcard
        argumentDocs:
            default: |-
                - a boolean which tells if the retrieved credit card
                is marked as the default payment mean
            description: '- the description attribute of the credit card'
            description_regexp: |-
                - (Optional) a regexp used to filter credit cards
                on their description attributes.
            state: '- the state attribute of the credit card'
            states: |-
                - (Optional) Filter credit cards on their state attribute.
                Can be "expired", "valid", "tooManyFailures"
            use_default: '- (Optional) Retrieve credit card marked as default payment mean.'
            use_last_to_expire: |-
                - (Optional) Retrieve the credit card that will be the last
                to expire according to its expiration date.
        importStatements: []
    me_ssh_key:
        subCategory: ""
        description: Get information & status of an SSH key.
        name: me_ssh_key
        title: me_ssh_key
        argumentDocs:
            default: '- True when this public SSH key is used for rescue mode and reinstallations.'
            key: |-
                - The content of the public key.
                E.g.: "ssh-ed25519 AAAAC3..."
            key_name: '- (Required) The name of the SSH key.'
        importStatements: []
    me_ssh_keys:
        subCategory: ""
        description: Get the list of the SSH keys of the account.
        name: me_ssh_keys
        title: me_ssh_keys
        argumentDocs:
            names: '- The list of the names of all the SSH keys.'
        importStatements: []
    order_cart:
        subCategory: ""
        description: Create a temporary order cart to retrieve information order cart products.
        name: order_cart
        title: order_cart
        argumentDocs:
            cart_id: '- Cart identifier'
            description: '- Description of your cart'
            expire: '- Expiration time (format: 2006-01-02T15:04:05+00:00)'
            items: '- Items of your cart'
            ovh_subsidiary: '- (Required) OVHcloud Subsidiary'
            read_only: '- Indicates if the cart has already been validated'
        importStatements: []
    order_cart_product:
        subCategory: ""
        description: Retrieve information of order cart product products.
        name: order_cart_product
        title: order_cart_product
        argumentDocs:
            capacities: '- Capacities of the pricing (type of pricing)'
            cart_id: '- (Required) Cart identifier'
            currency_code: '- Currency code'
            description: '- Description of the pricing'
            duration: '- Duration for ordering the product'
            interval: '- Interval of renewal'
            maximum_quantity: '- Maximum quantity that can be ordered'
            maximum_repeat: '- Maximum repeat for renewal'
            minimum_quantity: '- Minimum quantity that can be ordered'
            minimum_repeat: '- Minimum repeat for renewal'
            plan_code: '- Product offer identifier'
            price: '- Price of the product (Price with its currency and textual representation)'
            price_in_ucents: '- Price of the product in micro-centims'
            prices: '- Prices of the product offer'
            pricing_mode: '- Pricing model identifier'
            pricing_type: '- Pricing type'
            product: '- (Required) product'
            product_name: '- Name of the product'
            product_type: '- Product type'
            result: '- products results'
            text: '- Textual representation'
            value: '- The effective price'
        importStatements: []
    order_cart_product_options:
        subCategory: ""
        description: Retrieve information of order cart product options.
        name: order_cart_product_options
        title: order_cart_product_options
        argumentDocs:
            capacities: '- Capacities of the pricing (type of pricing)'
            cart_id: '- (Required) Cart identifier'
            catalog_name: '- Catalog name'
            currency_code: '- Currency code'
            description: '- Description of the pricing'
            duration: '- Duration for ordering the product'
            exclusive: '- Define if options of this family are exclusive with each other'
            family: '- Option family'
            interval: '- Interval of renewal'
            mandatory: '- Define if an option of this family is mandatory'
            maximum_quantity: '- Maximum quantity that can be ordered'
            maximum_repeat: '- Maximum repeat for renewal'
            minimum_quantity: '- Minimum quantity that can be ordered'
            minimum_repeat: '- Minimum repeat for renewal'
            plan_code: '- (Required) Product offer identifier'
            price: '- Price of the product (Price with its currency and textual representation)'
            price_in_ucents: '- Price of the product in micro-centims'
            prices: '- Prices of the product offer'
            pricing_mode: '- Pricing model identifier'
            pricing_type: '- Pricing type'
            product: '- (Required) Product'
            product_name: '- Name of the product'
            product_type: '- Product type'
            result: '- products results'
            text: '- Textual representation'
            value: '- The effective price'
        importStatements: []
    order_cart_product_options_plan:
        subCategory: ""
        description: Retrieve information of order cart product options plan.
        name: order_cart_product_options_plan
        title: order_cart_product_options_plan
        argumentDocs:
            capacities: '- Capacities of the pricing (type of pricing)'
            cart_id: '- (Required) Cart identifier'
            catalog_name: '- Catalog name'
            currency_code: '- Currency code'
            description: '- Description of the pricing'
            duration: '- Duration for ordering the product'
            exclusive: '- Define if options of this family are exclusive with each other'
            family: '- Option family'
            interval: '- Interval of renewal'
            mandatory: '- Define if an option of this family is mandatory'
            maximum_quantity: '- Maximum quantity that can be ordered'
            maximum_repeat: '- Maximum repeat for renewal'
            minimum_quantity: '- Minimum quantity that can be ordered'
            minimum_repeat: '- Minimum repeat for renewal'
            options_plan_code: '- (Required) options plan code.'
            plan_code: '- (Required) Product offer identifier'
            price: '- Price of the product (Price with its currency and textual representation)'
            price_capacity: '- (Required) Capacity of the pricing (type of pricing)'
            price_in_ucents: '- Price of the product in micro-centims'
            prices: '- Prices of the product offer'
            pricing_mode: '- Pricing model identifier'
            pricing_type: '- Pricing type'
            product: '- (Required) Product'
            product_name: '- Name of the product'
            product_type: '- Product type'
            selected_price: '- Selected Price according to capacity'
            text: '- Textual representation'
            value: '- The effective price'
        importStatements: []
    order_cart_product_plan:
        subCategory: ""
        description: Retrieve information of order cart product plan.
        name: order_cart_product_plan
        title: order_cart_product_plan
        argumentDocs:
            capacities: '- Capacities of the pricing (type of pricing)'
            cart_id: '- (Required) Cart identifier'
            catalog_name: '- Catalog name'
            currency_code: '- Currency code'
            description: '- Description of the pricing'
            duration: '- Duration for ordering the product'
            interval: '- Interval of renewal'
            maximum_quantity: '- Maximum quantity that can be ordered'
            maximum_repeat: '- Maximum repeat for renewal'
            minimum_quantity: '- Minimum quantity that can be ordered'
            minimum_repeat: '- Minimum repeat for renewal'
            plan_code: '- (Required) Product offer identifier'
            price: '- Price of the product (Price with its currency and textual representation)'
            price_capacity: '- (Required) Capacity of the pricing (type of pricing)'
            price_in_ucents: '- Price of the product in micro-centims'
            prices: '- Prices of the product offer'
            pricing_mode: '- Pricing model identifier'
            pricing_type: '- Pricing type'
            product: '- (Required) Product'
            product_name: '- Name of the product'
            product_type: '- Product type'
            selected_price: '- Selected Price according to capacity'
            text: '- Textual representation'
            value: '- The effective price'
        importStatements: []
    ovh_cloud_project:
        subCategory: ""
        description: Orders a public cloud project.
        name: ovh_cloud_project
        title: ovh_cloud_project
        examples:
            - name: cloud
              manifest: |-
                {
                  "description": "my cloud project",
                  "ovh_subsidiary": "${data.ovh_order_cart.mycart.ovh_subsidiary}",
                  "payment_mean": "fidelity",
                  "plan": [
                    {
                      "duration": "${data.ovh_order_cart_product_plan.cloud.selected_price.0.duration}",
                      "plan_code": "${data.ovh_order_cart_product_plan.cloud.plan_code}",
                      "pricing_mode": "${data.ovh_order_cart_product_plan.cloud.selected_price.0.pricing_mode}"
                    }
                  ]
                }
              references:
                ovh_subsidiary: data.ovh_order_cart.mycart.ovh_subsidiary
                plan.duration: data.ovh_order_cart_product_plan.cloud.selected_price.0.duration
                plan.plan_code: data.ovh_order_cart_product_plan.cloud.plan_code
                plan.pricing_mode: data.ovh_order_cart_product_plan.cloud.selected_price.0.pricing_mode
        argumentDocs:
            access: '- project access'
            catalog_name: '- Catalog name'
            configuration: '- (Optional) Representation of a configuration item for personalizing product'
            date: '- date'
            description: '- A description associated with the user.'
            details: '- Information about a Bill entry'
            domain: '- expiration date'
            duration: '- (Required) duration'
            expiration_date: '- expiration date'
            label: '- (Required) Identifier of the resource'
            order: '- Details about an Order'
            order_detail_id: '- order detail id'
            order_id: '- order id'
            ovh_subsidiary: '- (Required) OVHcloud Subsidiary'
            payment_mean: '- (Required) OVHcloud payment mode (One of "default-payment-mean", "fidelity", "ovh-account")'
            plan: '- (Required) Product Plan to order'
            plan_code: '- (Required) Plan code'
            plan_option: '- (Optional) Product Plan to order'
            pricing_mode: '- (Required) Pricing model identifier'
            project_id: '- openstack project id'
            project_name: '- openstack project name'
            quantity: '- quantity'
            status: '- project status'
            value: '- (Required) Path to the resource in API.OVH.COM'
        importStatements: []
    ovh_cloud_project_containerregistry:
        subCategory: ""
        description: Creates a container registry associated with a public cloud project.
        name: ovh_cloud_project_containerregistry
        title: cloud_project_containerregistry
        examples:
            - name: reg
              manifest: |-
                {
                  "name": "mydockerregistry",
                  "plan_id": "${data.ovh_cloud_project_capabilities_containerregistry_filter.regcap.id}",
                  "region": "${data.ovh_cloud_project_capabilities_containerregistry_filter.regcap.region}",
                  "service_name": "${data.ovh_cloud_project_capabilities_containerregistry_filter.regcap.service_name}"
                }
              references:
                plan_id: data.ovh_cloud_project_capabilities_containerregistry_filter.regcap.id
                region: data.ovh_cloud_project_capabilities_containerregistry_filter.regcap.region
                service_name: data.ovh_cloud_project_capabilities_containerregistry_filter.regcap.service_name
        argumentDocs:
            code: '- Plan code from the catalog'
            created_at: '- Registry creation date'
            features: '- Features of the plan'
            id: '- Registry ID'
            image_storage: '- Docker image storage limits in bytes'
            name: '- Registry name'
            parallel_request: '- Parallel requests on Docker image API (/v2 Docker registry API)'
            plan: '-  Plan of the registry'
            plan_id: '- Plan ID of the registry'
            project_id: '- Project ID of your registry'
            region: '- Region of the registry'
            registry_limits: '- Container registry limits'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            size: '- Current size of the registry (bytes)'
            status: '- Registry status'
            updated_at: '- Plan last update date'
            url: '- Access url of the registry'
            version: '- Version of your registry'
            vulnerability: '- Vulnerability scanning'
        importStatements: []
    ovh_cloud_project_containerregistry_user:
        subCategory: ""
        description: Creates a user for a container registry associated with a public cloud project.
        name: ovh_cloud_project_containerregistry_user
        title: cloud_project_containerregistry_user
        examples:
            - name: user
              manifest: |-
                {
                  "email": "foo@bar.com",
                  "login": "foobar",
                  "registry_id": "${ovh_cloud_project_containerregistry.registry.id}",
                  "service_name": "${ovh_cloud_project_containerregistry.registry.service_name}"
                }
              references:
                registry_id: ovh_cloud_project_containerregistry.registry.id
                service_name: ovh_cloud_project_containerregistry.registry.service_name
        argumentDocs:
            email: '- User email'
            id: '- User ID'
            password: '- (Sensitive) User password'
            registry_id: '- Registry ID'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            user: '- User name'
        importStatements: []
    ovh_cloud_project_database:
        subCategory: ""
        description: Creates a managed database cluster in a public cloud project.
        name: ovh_cloud_project_database
        title: cloud_project_database
        examples:
            - name: cassandradb
              manifest: |-
                {
                  "description": "my-first-cassandra",
                  "engine": "cassandra",
                  "flavor": "db1-4",
                  "nodes": [
                    {
                      "region": "BHS"
                    },
                    {
                      "region": "BHS"
                    },
                    {
                      "region": "BHS"
                    }
                  ],
                  "plan": "essential",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "4.0"
                }
            - name: kafkadb
              manifest: |-
                {
                  "description": "my-first-kafka",
                  "engine": "kafka",
                  "flavor": "db1-4",
                  "kafka_rest_api": true,
                  "nodes": [
                    {
                      "region": "DE"
                    },
                    {
                      "region": "DE"
                    },
                    {
                      "region": "DE"
                    }
                  ],
                  "plan": "business",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "3.1"
                }
            - name: m3db
              manifest: |-
                {
                  "description": "my-first-m3db",
                  "engine": "m3db",
                  "flavor": "db1-7",
                  "nodes": [
                    {
                      "region": "BHS"
                    }
                  ],
                  "plan": "essential",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "1.2"
                }
            - name: mongodb
              manifest: |-
                {
                  "description": "my-first-mongodb",
                  "engine": "mongodb",
                  "flavor": "db1-2",
                  "nodes": [
                    {
                      "region": "GRA"
                    }
                  ],
                  "plan": "essential",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "5.0"
                }
            - name: mysqldb
              manifest: |-
                {
                  "description": "my-first-mysql",
                  "engine": "mysql",
                  "flavor": "db1-4",
                  "nodes": [
                    {
                      "region": "SBG"
                    }
                  ],
                  "plan": "essential",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "8"
                }
            - name: opensearchdb
              manifest: |-
                {
                  "description": "my-first-opensearch",
                  "engine": "opensearch",
                  "flavor": "db1-4",
                  "nodes": [
                    {
                      "region": "UK"
                    }
                  ],
                  "opensearch_acls_enabled": true,
                  "plan": "essential",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "1"
                }
            - name: pgsqldb
              manifest: |-
                {
                  "description": "my-first-postgresql",
                  "engine": "postgresql",
                  "flavor": "db1-4",
                  "nodes": [
                    {
                      "region": "WAW"
                    }
                  ],
                  "plan": "essential",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "14"
                }
            - name: redisdb
              manifest: |-
                {
                  "description": "my-first-redis",
                  "engine": "redis",
                  "flavor": "db1-4",
                  "nodes": [
                    {
                      "region": "BHS"
                    }
                  ],
                  "plan": "essential",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "6.2"
                }
            - name: postgresql
              manifest: |-
                {
                  "description": "my-first-postgresql",
                  "engine": "postgresql",
                  "flavor": "db1-15",
                  "nodes": [
                    {
                      "region": "GRA"
                    },
                    {
                      "region": "GRA"
                    }
                  ],
                  "plan": "business",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "14"
                }
            - name: mongodb
              manifest: |-
                {
                  "description": "my-first-mongodb",
                  "engine": "mongodb",
                  "flavor": "db1-30",
                  "nodes": [
                    {
                      "network_id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
                      "region": "SBG",
                      "subnet_id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
                    },
                    {
                      "network_id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
                      "region": "SBG",
                      "subnet_id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
                    },
                    {
                      "network_id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
                      "region": "SBG",
                      "subnet_id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
                    }
                  ],
                  "plan": "enterprise",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "version": "5.0"
                }
            - name: db
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            backup_time: '- Time on which backups start every day.'
            component: '- Type of component the URI relates to.'
            create: '- (Default 20m)'
            created_at: '- Date of the creation of the cluster.'
            delete: '- (Default 20m)'
            description: '- (Optional) Small description of the database service.'
            domain: '- Domain of the cluster.'
            endpoints: '- List of all endpoints objects of the service.'
            engine: |-
                - (Required, Forces new resource) The database engine you want to deploy. To get a full list of available engine visit.
                public documentation.
            flavor: |-
                -  (Required) A valid OVHcloud public cloud database flavor name in which the nodes will be started.
                Ex: "db1-7". Changing this value upgrade the nodes with the new flavor.
                You can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/
            id: '- Public Cloud Database Service ID'
            kafka_rest_api: '-  (Optional) Defines whether the REST API is enabled on a kafka cluster'
            maintenance_time: '- Time on which maintenances can start every day.'
            network_id: '- (Optional, Forces new resource) Private network id in which the node should be deployed. It''s the regional openstackId of the private network'
            network_type: '- Type of network of the cluster.'
            nodes: |-
                - (Required, Minimum Items: 1) List of nodes object.
                Multi region cluster are not yet available, all node should be identical.
            opensearch_acls_enabled: '-  (Optional) Defines whether the ACLs are enabled on an OpenSearch cluster'
            path: '- Path of the endpoint.'
            plan: |-
                - (Required) Plan of the cluster.
                Enum: "essential", "business", "enterprise".
            port: '- Connection port for the endpoint.'
            region: |-
                - (Required, Forces new resource) Public cloud region in which the node should be deployed.
                Ex: "GRA'.
            scheme: '- Scheme used to generate the URI.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            ssl: '- Defines whether the endpoint uses SSL.'
            ssl_mode: '- SSL mode used to connect to the service if the SSL is enabled.'
            status: '- Current status of the cluster.'
            subnet_id: '- (Optional, Forces new resource) Private subnet ID in which the node is.'
            update: '- (Default 40m)'
            uri: '- URI of the endpoint.'
            version: '- (Required) The version of the engine in which the service should be deployed'
        importStatements: []
    ovh_cloud_project_database_database:
        subCategory: ""
        description: Creates an database for a database cluster associated with a public cloud project.
        name: ovh_cloud_project_database_database
        title: cloud_project_database_database
        examples:
            - name: database
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.db.id}",
                  "engine": "${data.ovh_cloud_project_database.db.engine}",
                  "name": "mydatabase",
                  "service_name": "${data.ovh_cloud_project_database.db.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.db.id
                engine: data.ovh_cloud_project_database.db.engine
                service_name: data.ovh_cloud_project_database.db.service_name
            - name: database
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            default: '- Defines if the database has been created by default.'
            delete: '- (Default 20m)'
            engine: |-
                - (Required, Forces new resource) The engine of the database cluster you want to add. You can find the complete list of available engine in the public documentation.
                Available engines:
            id: '- ID of the database.'
            name: '- (Required, Forces new resource) Name of the database.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    ovh_cloud_project_database_integration:
        subCategory: ""
        description: Creates an integration for a database cluster associated with a public cloud project.
        name: ovh_cloud_project_database_integration
        title: cloud_project_database_integration
        examples:
            - name: integration
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.dbpostgresql.id}",
                  "destination_service_id": "${data.ovh_cloud_project_database.dbopensearch.id}",
                  "engine": "${data.ovh_cloud_project_database.dbpostgresql.engine}",
                  "service_name": "${data.ovh_cloud_project_database.dbpostgresql.service_name}",
                  "source_service_id": "${data.ovh_cloud_project_database.dbpostgresql.id}",
                  "type": "opensearchLogs"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.dbpostgresql.id
                destination_service_id: data.ovh_cloud_project_database.dbopensearch.id
                engine: data.ovh_cloud_project_database.dbpostgresql.engine
                service_name: data.ovh_cloud_project_database.dbpostgresql.service_name
                source_service_id: data.ovh_cloud_project_database.dbpostgresql.id
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            delete: '- (Default 20m)'
            destination_service_id: '- (Required, Forces new resource) ID of the destination service.'
            engine: |-
                - (Required, Forces new resource) The engine of the database cluster you want to add. You can find the complete list of available engine in the public documentation.
                All engines available exept mongodb.
            id: '- - ID of the integration.'
            parameters: '- (Optional, Forces new resource) Parameters for the integration.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            source_service_id: '- (Required, Forces new resource) ID of the source service.'
            status: '- Current status of the integration.'
            type: |-
                - (Optional, Forces new resource) Type of the integration.
                Available types:
            update: '- (Default 20m)'
        importStatements: []
    ovh_cloud_project_database_ip_restriction:
        subCategory: ""
        description: Creates an IP restriction for a managed database cluster associated with a public cloud project.
        name: ovh_cloud_project_database_ip_restriction
        title: cloud_project_database_ip_restriction
        examples:
            - name: iprestriction
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.db.id}",
                  "engine": "${data.ovh_cloud_project_database.db.engine}",
                  "ip": "178.97.6.0/24",
                  "service_name": "${data.ovh_cloud_project_database.db.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.db.id
                engine: data.ovh_cloud_project_database.db.engine
                service_name: data.ovh_cloud_project_database.db.service_name
            - name: iprestriction
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            delete: '- (Default 20m)'
            description: '- (Optional) Description of the IP restriction.'
            engine: |-
                - (Required, Forces new resource) The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.
                public documentation.
            ip: '- (Required, Forces new resource) Authorized IP.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the IP restriction.'
            update: '- (Default 20m)'
        importStatements: []
    ovh_cloud_project_database_kafka_acl:
        subCategory: ""
        description: Creates an ACL for a kafka cluster associated with a public cloud project.
        name: ovh_cloud_project_database_kafka_acl
        title: cloud_project_database_kafka_acl
        examples:
            - name: acl
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.kafka.id}",
                  "permission": "read",
                  "service_name": "${data.ovh_cloud_project_database.kafka.service_name}",
                  "topic": "mytopic",
                  "username": "johndoe"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.kafka.id
                service_name: data.ovh_cloud_project_database.kafka.service_name
            - name: acl
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            delete: '- (Default 20m)'
            id: '- ID of the ACL.'
            permission: |-
                - (Required, Forces new resource) Permission to give to this username on this topic.
                Available permissions:
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            topic: '- (Required, Forces new resource) Topic affected by this ACL.'
            username: '- (Required, Forces new resource) Username affected by this ACL.'
        importStatements: []
    ovh_cloud_project_database_kafka_topic:
        subCategory: ""
        description: Creates a topic for a kafka cluster associated with a public cloud project.
        name: ovh_cloud_project_database_kafka_topic
        title: cloud_project_database_kafka_topic
        examples:
            - name: topic
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.kafka.id}",
                  "min_insync_replicas": 1,
                  "name": "mytopic",
                  "partitions": 3,
                  "replication": 2,
                  "retention_bytes": 4,
                  "retention_hours": 5,
                  "service_name": "${data.ovh_cloud_project_database.kafka.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.kafka.id
                service_name: data.ovh_cloud_project_database.kafka.service_name
            - name: topic
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            delete: '- (Default 20m)'
            id: '- ID of the topic.'
            min_insync_replicas: '- (Optional, Forces new resource) Minimum insync replica accepted for this topic. Should be superior to 0'
            name: '- (Required, Forces new resource) Name of the topic. No spaces allowed.'
            partitions: '- (Optional, Forces new resource) Number of partitions for this topic. Should be superior to 0'
            replication: '- (Optional, Forces new resource) Number of replication for this topic. Should be superior to 1'
            retention_bytes: '- (Optional, Forces new resource) Number of bytes for the retention of the data for this topic. Inferior to 0 means unlimited'
            retention_hours: '- (Optional, Forces new resource) Number of hours for the retention of the data for this topic. Should be superior to -2. Inferior to 0 means unlimited'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    ovh_cloud_project_database_m3db_namespace:
        subCategory: ""
        description: Creates a namespace for a M3DB cluster associated with a public cloud project.
        name: ovh_cloud_project_database_m3db_namespace
        title: cloud_project_database_m3db_namespace
        examples:
            - name: namespace
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.m3db.id}",
                  "name": "mynamespace",
                  "resolution": "P2D",
                  "retention_period_duration": "PT48H",
                  "service_name": "${data.ovh_cloud_project_database.m3db.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.m3db.id
                service_name: data.ovh_cloud_project_database.m3db.service_name
            - name: namespace
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            delete: '- (Default 20m)'
            id: '- ID of the namespace.'
            name: '- (Required, Forces new resource) Name of the namespace.'
            resolution: '- (Optional) Resolution for an aggregated namespace. Should follow Rfc3339 e.g P2D, PT48H.'
            retention_block_data_expiration_duration: '- (Optional) Controls how long we wait before expiring stale data. Should follow Rfc3339 e.g P2D, PT48H.'
            retention_block_size_duration: '- (Optional) Controls how long to keep a block in memory before flushing to a fileset on disk. Should follow Rfc3339 e.g P2D, PT48H.'
            retention_buffer_future_duration: '- (Optional) Controls how far into the future writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.'
            retention_buffer_past_duration: '- (Optional) Controls how far into the past writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.'
            retention_period_duration: '- (Required) Controls the duration of time that M3DB will retain data for the namespace. Should follow Rfc3339 e.g P2D, PT48H.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            snapshot_enabled: '- (Optional) Defines whether M3DB will create snapshot files for this namespace.'
            type: '- Type of namespace.'
            update: '- (Default 20m)'
            writes_to_commit_log_enabled: '- (Optional) Defines whether M3DB will include writes to this namespace in the commit log.'
        importStatements: []
    ovh_cloud_project_database_m3db_user:
        subCategory: ""
        description: Creates an user for a M3DB cluster associated with a public cloud project.
        name: ovh_cloud_project_database_m3db_user
        title: cloud_project_database_m3db_user
        examples:
            - name: user
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.m3db.id}",
                  "group": "mygroup",
                  "name": "johndoe",
                  "service_name": "${data.ovh_cloud_project_database.m3db.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.m3db.id
                service_name: data.ovh_cloud_project_database.m3db.service_name
            - name: user
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.m3db.id}",
                  "group": "mygroup",
                  "name": "johndoe",
                  "password_reset": "reset1",
                  "service_name": "${data.ovh_cloud_project_database.m3db.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.m3db.id
                service_name: data.ovh_cloud_project_database.m3db.service_name
            - name: user
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            created_at: '- Date of the creation of the user.'
            delete: '- (Default 20m)'
            group: '- (Optional) Group of the user:'
            id: '- ID of the user.'
            name: '- (Required, Forces new resource) Name of the user.'
            password: '- (Sensitive) Password of the user.'
            password_reset: '- (Optional) Arbitrary string to change to trigger a password update. Use the terraform refresh command after executing terraform apply to update the output with the new password.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
            update: '- (Default 20m)'
        importStatements: []
    ovh_cloud_project_database_mongodb_user:
        subCategory: ""
        description: Creates an user for a MongoDB cluster associated with a public cloud project.
        name: ovh_cloud_project_database_mongodb_user
        title: cloud_project_database_mongodb_user
        examples:
            - name: user
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.mongodb.id}",
                  "name": "johndoe",
                  "roles": [
                    "backup",
                    "readAnyDatabase"
                  ],
                  "service_name": "${data.ovh_cloud_project_database.mongodb.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.mongodb.id
                service_name: data.ovh_cloud_project_database.mongodb.service_name
            - name: user
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.mongodb.id}",
                  "name": "johndoe",
                  "password_reset": "reset1",
                  "roles": [
                    "backup",
                    "readAnyDatabase"
                  ],
                  "service_name": "${data.ovh_cloud_project_database.mongodb.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.mongodb.id
                service_name: data.ovh_cloud_project_database.mongodb.service_name
            - name: user
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            created_at: '- Date of the creation of the user.'
            delete: '- (Default 20m)'
            id: '- ID of the user.'
            name: '- (Required, Forces new resource) Name of the user.'
            password: '- (Sensitive) Password of the user.'
            password_reset: '- (Optional) Arbitrary string to change to trigger a password update. Use the terraform refresh command after executing terraform apply to update the output with the new password.'
            roles: |-
                - (Optional: if omit, default role) Roles the user belongs to.
                Available roles:
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
            update: '- (Default 20m)'
        importStatements: []
    ovh_cloud_project_database_opensearch_pattern:
        subCategory: ""
        description: Creates a pattern for a opensearch cluster associated with a public cloud project.
        name: ovh_cloud_project_database_opensearch_pattern
        title: cloud_project_database_opensearch_pattern
        examples:
            - name: pattern
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.opensearch.id}",
                  "max_index_count": 2,
                  "pattern": "logs_*",
                  "service_name": "${data.ovh_cloud_project_database.opensearch.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.opensearch.id
                service_name: data.ovh_cloud_project_database.opensearch.service_name
            - name: pattern
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            delete: '- (Default 20m)'
            id: '- ID of the pattern.'
            max_index_count: '- (Optional, Forces new resource) Maximum number of index for this pattern.'
            pattern: '- (Required, Forces new resource) Pattern format.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    ovh_cloud_project_database_opensearch_user:
        subCategory: ""
        description: Creates an user for a OpenSearch cluster associated with a public cloud project.
        name: ovh_cloud_project_database_opensearch_user
        title: cloud_project_database_opensearch_user
        examples:
            - name: user
              manifest: |-
                {
                  "acls": [
                    {
                      "pattern": "logs_*",
                      "permission": "read"
                    },
                    {
                      "pattern": "data_*",
                      "permission": "deny"
                    }
                  ],
                  "cluster_id": "${data.ovh_cloud_project_database.opensearch.id}",
                  "name": "johndoe",
                  "service_name": "${data.ovh_cloud_project_database.opensearch.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.opensearch.id
                service_name: data.ovh_cloud_project_database.opensearch.service_name
            - name: user
              manifest: |-
                {
                  "acls": [
                    {
                      "pattern": "logs_*",
                      "permission": "read"
                    },
                    {
                      "pattern": "data_*",
                      "permission": "deny"
                    }
                  ],
                  "cluster_id": "${data.ovh_cloud_project_database.opensearch.id}",
                  "name": "johndoe",
                  "password_reset": "reset1",
                  "service_name": "${data.ovh_cloud_project_database.opensearch.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.opensearch.id
                service_name: data.ovh_cloud_project_database.opensearch.service_name
            - name: user
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            acls: '- (Optional) Acls of the user.'
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            created_at: '- Date of the creation of the user.'
            delete: '- (Default 20m)'
            id: '- ID of the user.'
            name: '- (Required, Forces new resource) Username affected by this acl.'
            password: '- (Sensitive) Password of the user.'
            password_reset: '- (Optional) Arbitrary string to change to trigger a password update. Use the terraform refresh command after executing terraform apply to update the output with the new password.'
            pattern: '- (Required) Pattern of the ACL.'
            permission: |-
                - (Required) Permission of the ACL
                Available permission:
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
            update: '- (Default 20m)'
        importStatements: []
    ovh_cloud_project_database_postgresql_user:
        subCategory: ""
        description: Creates an user for a PostgreSQL cluster associated with a public cloud project.
        name: ovh_cloud_project_database_postgresql_user
        title: cloud_project_database_postgresql_user
        examples:
            - name: user
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.postgresql.id}",
                  "name": "johndoe",
                  "roles": [
                    "replication"
                  ],
                  "service_name": "${data.ovh_cloud_project_database.postgresql.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.postgresql.id
                service_name: data.ovh_cloud_project_database.postgresql.service_name
            - name: user
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.postgresql.id}",
                  "name": "johndoe",
                  "password_reset": "reset1",
                  "roles": [
                    "replication"
                  ],
                  "service_name": "${data.ovh_cloud_project_database.postgresql.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.postgresql.id
                service_name: data.ovh_cloud_project_database.postgresql.service_name
            - name: user
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            created_at: '- Date of the creation of the user.'
            delete: '- (Default 20m)'
            id: '- ID of the user.'
            name: '- (Required, Forces new resource) Name of the user.'
            password: '- (Sensitive) Password of the user.'
            password_reset: '- (Optional) Arbitrary string to change to trigger a password update. Use the terraform refresh command after executing terraform apply to update the output with the new password.'
            roles: |-
                - (Optional: if omit, default role) Roles the user belongs to.
                Available roles:
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
            update: '- (Default 20m)'
        importStatements: []
    ovh_cloud_project_database_redis_user:
        subCategory: ""
        description: Creates an user for a Redis cluster associated with a public cloud project.
        name: ovh_cloud_project_database_redis_user
        title: cloud_project_database_redis_user
        examples:
            - name: user
              manifest: |-
                {
                  "categories": [
                    "+@set",
                    "+@sortedset"
                  ],
                  "channels": [
                    "*"
                  ],
                  "cluster_id": "${data.ovh_cloud_project_database.redis.id}",
                  "commands": [
                    "+get",
                    "-set"
                  ],
                  "keys": [
                    "data",
                    "properties"
                  ],
                  "name": "johndoe",
                  "service_name": "${data.ovh_cloud_project_database.redis.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.redis.id
                service_name: data.ovh_cloud_project_database.redis.service_name
            - name: user
              manifest: |-
                {
                  "categories": [
                    "+@set",
                    "+@sortedset"
                  ],
                  "channels": [
                    "*"
                  ],
                  "cluster_id": "${data.ovh_cloud_project_database.redis.id}",
                  "commands": [
                    "+get",
                    "-set"
                  ],
                  "keys": [
                    "data",
                    "properties"
                  ],
                  "name": "johndoe",
                  "password_reset": "reset1",
                  "service_name": "${data.ovh_cloud_project_database.redis.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.redis.id
                service_name: data.ovh_cloud_project_database.redis.service_name
            - name: user
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            categories: '- (Optional) Categories of the user.'
            channels: '- (Optional: if omit, all channels) Channels of the user.'
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            commands: '- (Optional) Commands of the user.'
            create: '- (Default 20m)'
            created_at: '- Date of the creation of the user.'
            delete: '- (Default 20m)'
            id: '- ID of the user.'
            keys: '- (Optional) Keys of the user.'
            name: '- (Required, Forces new resource) Name of the user.'
            password: '- (Sensitive) Password of the user.'
            password_reset: '- (Optional) Arbitrary string to change to trigger a password update. Use the terraform refresh command after executing terraform apply to update the output with the new password.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
            update: '- (Default 20m)'
        importStatements: []
    ovh_cloud_project_database_user:
        subCategory: ""
        description: Creates an user for a database cluster associated with a public cloud project.
        name: ovh_cloud_project_database_user
        title: cloud_project_database_user
        examples:
            - name: user
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.db.id}",
                  "engine": "${data.ovh_cloud_project_database.db.engine}",
                  "name": "johndoe",
                  "service_name": "${data.ovh_cloud_project_database.db.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.db.id
                engine: data.ovh_cloud_project_database.db.engine
                service_name: data.ovh_cloud_project_database.db.service_name
            - name: user
              manifest: |-
                {
                  "cluster_id": "${data.ovh_cloud_project_database.db.id}",
                  "engine": "${data.ovh_cloud_project_database.db.engine}",
                  "name": "johndoe",
                  "password_reset": "reset1",
                  "service_name": "${data.ovh_cloud_project_database.db.service_name}"
                }
              references:
                cluster_id: data.ovh_cloud_project_database.db.id
                engine: data.ovh_cloud_project_database.db.engine
                service_name: data.ovh_cloud_project_database.db.service_name
            - name: user
              manifest: |-
                {
                  "timeouts": [
                    {
                      "create": "1h",
                      "delete": "50s",
                      "update": "45m"
                    }
                  ]
                }
        argumentDocs:
            cluster_id: '- (Required, Forces new resource) Cluster ID.'
            create: '- (Default 20m)'
            created_at: '- Date of the creation of the user.'
            delete: '- (Default 20m)'
            engine: |-
                - (Required, Forces new resource) The engine of the database cluster you want to add. You can find the complete list of available engine in the public documentation.
                Available engines:
            id: '- ID of the user.'
            name: '- (Required, Forces new resource) Name of the user.'
            password: '- (Sensitive) Password of the user.'
            password_reset: '- (Optional) Arbitrary string to change to trigger a password update. Use the terraform refresh command after executing terraform apply to update the output with the new password.'
            service_name: |-
                - (Required, Forces new resource) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Current status of the user.'
            update: '- (Default 20m)'
        importStatements: []
    ovh_cloud_project_failover_ip_attach:
        subCategory: ""
        description: Attaches failover ip addresses to cloud instances
        name: ovh_cloud_project_failover_ip_attach
        title: cloud_project_failover_ip_attach
        examples:
            - name: myfailoverip
              manifest: |-
                {
                  "ip": "XXXXXX",
                  "routed_to": "XXXXXX",
                  "service_name": "XXXXXX"
                }
        argumentDocs:
            block: '- The IP block'
            continentCode: '- The Ip continent'
            geoloc: '- The Ip location'
            id: '- The Ip id'
            ip: '- The failover ip address to attach'
            progress: '- Current operation progress in percent'
            routed_to: '- The GUID of an instance to which the failover IP address is be attached'
            routedTo: '- Instance where ip is routed to'
            service_name: |-
                - The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Ip status, can be ok or operationPending'
            subType: '- IP sub type, can be cloud or ovh'
        importStatements: []
    ovh_cloud_project_kube:
        subCategory: ""
        description: Creates a kubernetes managed cluster in a public cloud project.
        name: ovh_cloud_project_kube
        title: cloud_project_kube
        examples:
            - name: mycluster
              manifest: |-
                {
                  "name": "my_kube_cluster",
                  "region": "GRA7",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                }
            - name: mycluster
              manifest: |-
                {
                  "customization": [
                    {
                      "apiserver": [
                        {
                          "admissionplugins": [
                            {
                              "disabled": [
                                "AlwaysPullImages"
                              ],
                              "enabled": [
                                "NodeRestriction"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "my_kube_cluster",
                  "region": "GRA5",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                }
            - name: mycluster
              manifest: |-
                {
                  "depends_on": [
                    "${ovh_cloud_project_network_private.network}"
                  ],
                  "name": "test-kube-attach",
                  "private_network_configuration": [
                    {
                      "default_vrack_gateway": "",
                      "private_network_routing_as_default": false
                    }
                  ],
                  "private_network_id": "${tolist(ovh_cloud_project_network_private.network.regions_attributes[*].openstackid)[0]}",
                  "region": "GRA5",
                  "service_name": "${var.service_name}"
                }
              references:
                service_name: var.service_name
              dependencies:
                ovh_cloud_project_network_private.network: |-
                    {
                      "depends_on": [
                        "${ovh_vrack_cloudproject.attach}"
                      ],
                      "name": "terraform_testacc_private_net",
                      "regions": [
                        "GRA5"
                      ],
                      "service_name": "${ovh_vrack_cloudproject.attach.service_name}",
                      "vlan_id": 0
                    }
                ovh_cloud_project_network_private_subnet.networksubnet: |-
                    {
                      "depends_on": [
                        "${ovh_cloud_project_network_private.network}"
                      ],
                      "dhcp": true,
                      "end": "192.168.168.200",
                      "network": "192.168.168.0/24",
                      "network_id": "${ovh_cloud_project_network_private.network.id}",
                      "no_gateway": false,
                      "region": "GRA5",
                      "service_name": "${ovh_cloud_project_network_private.network.service_name}",
                      "start": "192.168.168.100"
                    }
                ovh_vrack_cloudproject.attach: |-
                    {
                      "project_id": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                      "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    }
        argumentDocs:
            control_plane_is_up_to_date: '- True if control-plane is up to date.'
            customization: '- (Optional) Customer customization object'
            id: '- Managed Kubernetes Service ID'
            is_up_to_date: '- True if all nodes and control-plane are up to date.'
            kubeconfig: '- The kubeconfig file. Use this file to connect to your kubernetes cluster.'
            name: '- (Optional) The name of the kubernetes cluster.'
            next_upgrade_versions: '- Kubernetes versions available for upgrade.'
            nodes_url: '- Cluster nodes URL.'
            private_network_configuration: '- (Optional) The private network configuration'
            private_network_id: |-
                - (Optional) OpenStack private network ID to use.
                Changing this value delete the resource(including ETCD user data). Defaults - not use private network.
            region: |-
                - a valid OVHcloud public cloud region ID in which the kubernetes
                cluster will be available. Ex.: "GRA1". Defaults to all public cloud regions.
                Changing this value recreates the resource.
            service_name: |-
                - (Optional) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- Cluster status. Should be normally set to ''READY''.'
            update_policy: '- Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE].'
            url: '- Management URL of your cluster.'
            version: |-
                - (Optional) kubernetes version to use.
                Changing this value updates the resource. Defaults to latest available.
        importStatements: []
    ovh_cloud_project_kube_iprestrictions:
        subCategory: ""
        description: Apply IP restrictions to an OVHcloud Managed Kubernetes cluster.
        name: ovh_cloud_project_kube_iprestrictions
        title: cloud_project_kube_iprestrictions
        examples:
            - name: vrack_only
              manifest: |-
                {
                  "ips": [
                    "10.42.0.0/16"
                  ],
                  "kube_id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                }
        argumentDocs:
            ips: '- List of CIDR authorized to interact with the managed Kubernetes cluster.'
            kube_id: '- The id of the managed Kubernetes cluster.'
            service_name: |-
                - (Optional) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    ovh_cloud_project_kube_nodepool:
        subCategory: ""
        description: Creates a nodepool in a kubernetes managed cluster.
        name: ovh_cloud_project_kube_nodepool
        title: cloud_project_kube_nodepool
        examples:
            - name: pool
              manifest: |-
                {
                  "desired_nodes": 3,
                  "flavor_name": "b2-7",
                  "kube_id": "xxxxxxxx-2bf9-xxxx-xxxx-xxxxxxxxxxxx",
                  "max_nodes": 3,
                  "min_nodes": 3,
                  "name": "my-pool",
                  "service_name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
                  "template": [
                    {
                      "metadata": [
                        {
                          "annotations": {
                            "k1": "v1",
                            "k2": "v2"
                          },
                          "finalizers": [
                            "F1",
                            "F2"
                          ],
                          "labels": {
                            "k3": "v3",
                            "k4": "v4"
                          }
                        }
                      ],
                      "spec": [
                        {
                          "taints": [
                            {
                              "effect": "PreferNoSchedule",
                              "key": "k",
                              "value": "v"
                            }
                          ],
                          "unschedulable": false
                        }
                      ]
                    }
                  ]
                }
        argumentDocs:
            anti_affinity: '- (Optional) should the pool use the anti-affinity feature. Default to false.'
            autoscale: '- (Optional) Enable auto-scaling for the pool. Default to false.'
            available_nodes: '- Number of nodes which are actually ready in the pool'
            created_at: '- Creation date'
            current_nodes: '- Number of nodes present in the pool'
            desired_nodes: '- number of nodes to start.'
            flavor: '- Flavor name'
            flavor_name: |-
                - a valid OVHcloud public cloud flavor ID in which the nodes will be started.
                Ex: "b2-7". Changing this value recreates the resource.
                You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/
            kube_id: '- The id of the managed kubernetes cluster.'
            max_nodes: |-
                - maximum number of nodes allowed in the pool.
                Setting desired_nodes over this value will raise an error.
            min_nodes: |-
                - minimum number of nodes allowed in the pool.
                Setting desired_nodes under this value will raise an error.
            monthly_billed: '- (Optional) should the nodes be billed on a monthly basis. Default to false.'
            name: |-
                - (Optional) The name of the nodepool.
                Changing this value recreates the resource.
                Warning: "_" char is not allowed!
            project_id: '- Project id'
            service_name: |-
                - (Optional) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            size_status: '- Status describing the state between number of nodes wanted and available ones'
            status: '- Current status'
            'template ': '- (Optional) Managed Kubernetes nodepool template, which is a complex object constituted by two main nested objects:'
            up_to_date_nodes: '- Number of nodes with latest version installed in the pool'
            updated_at: '- Last update date'
        importStatements: []
    ovh_cloud_project_kube_oidc:
        subCategory: ""
        description: Creates an OIDC configuration in an OVHcloud Managed Kubernetes cluster.
        name: ovh_cloud_project_kube_oidc
        title: cloud_project_kube_oidc
        examples:
            - name: my-oidc
              manifest: |-
                {
                  "client_id": "xxx",
                  "issuer_url": "https://ovh.com",
                  "kube_id": "${ovh_cloud_project_kube.mykube.id}",
                  "service_name": "${var.projectid}"
                }
              references:
                kube_id: ovh_cloud_project_kube.mykube.id
                service_name: var.projectid
        argumentDocs:
            client_id: '- The OIDC client ID.'
            issuer_url: '- The OIDC issuer url.'
            kube_id: '- The ID of the managed kubernetes cluster.'
            service_name: |-
                - (required) The ID of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
        importStatements: []
    ovh_cloud_project_network_private:
        subCategory: ""
        description: Creates a private network in a public cloud project.
        name: ovh_cloud_project_network_private
        title: cloud_project_network_private
        examples:
            - name: net
              manifest: |-
                {
                  "name": "admin_network",
                  "regions": [
                    "GRA1",
                    "BHS1"
                  ],
                  "service_name": "XXXXXX"
                }
        argumentDocs:
            id: '- The id of the network'
            name: '- (Required) The name of the network.'
            regions: |-
                - an array of valid OVHcloud public cloud region ID in which the network
                will be available. Ex.: "GRA1". Defaults to all public cloud regions.
            regions_attributes: '- A map representing information about the region.'
            regions_attributes/openstackid: '- The private network id in the region.'
            regions_attributes/region: '- The id of the region.'
            regions_attributes/status: '- The status of the network in the region.'
            regions_status: '- (Deprecated) A map representing the status of the network per region.'
            regions_status/region: '- (Deprecated) The id of the region.'
            regions_status/status: '- (Deprecated) The status of the network in the region.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- the status of the network. should be normally set to ''ACTIVE''.'
            type: '- the type of the network. Either ''private'' or ''public''.'
            vlan_id: |-
                - a vlan id to associate with the network.
                Changing this value recreates the resource. Defaults to 0.
        importStatements: []
    ovh_cloud_project_network_private_subnet:
        subCategory: ""
        description: Creates a subnet in a private network of a public cloud project.
        name: ovh_cloud_project_network_private_subnet
        title: cloud_project_network_private_subnet
        examples:
            - name: subnet
              manifest: |-
                {
                  "dhcp": true,
                  "end": "192.168.168.200",
                  "network": "192.168.168.0/24",
                  "network_id": "0234543",
                  "no_gateway": false,
                  "region": "GRA1",
                  "service_name": "xxxxx",
                  "start": "192.168.168.100"
                }
        argumentDocs:
            cidr: '- Ip Block representing the subnet cidr.'
            dhcp: |-
                - (Optional) Enable DHCP.
                Changing this forces a new resource to be created. Defaults to false.
                _
            dhcp_id: '- See Argument Reference above.'
            end: |-
                - (Required) Last ip for this region.
                Changing this value recreates the subnet.
            gateway_ip: '- The IP of the gateway'
            ip_pools: '- List of ip pools allocated in the subnet.'
            ip_pools/dhcp: '- DHCP enabled.'
            ip_pools/end: '- Last ip for this region.'
            ip_pools/network: '- Global network with cidr.'
            ip_pools/region: '- Region where this subnet is created.'
            ip_pools/start: '- First ip for this region.'
            network: |-
                - (Required) Global network in CIDR format.
                Changing this value recreates the subnet
            network_id: |-
                - (Required) The id of the network.
                Changing this forces a new resource to be created.
            no_gateway: |-
                - Set to true if you don't want to set a default gateway IP.
                Changing this value recreates the resource. Defaults to false.
            region: |-
                - The region in which the network subnet will be created.
                Ex.: "GRA1". Changing this value recreates the resource.
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            start: |-
                - (Required) First ip for this region.
                Changing this value recreates the subnet.
        importStatements: []
    ovh_cloud_project_user:
        subCategory: ""
        description: Creates a user in a public cloud project.
        name: ovh_cloud_project_user
        title: ovh_cloud_project_user
        examples:
            - name: user1
              manifest: |-
                {
                  "service_name": "XXX"
                }
        argumentDocs:
            creation_date: '- the date the user was created.'
            description: '- A description associated with the user.'
            id: '- id of the role'
            name: '- name of the role'
            openstack_rc: |-
                - a convenient map representing an openstack_rc file.
                Note: no password nor sensitive token is set in this map.
            password: |-
                - (Sensitive) the password generated for the user. The password can
                be used with the Openstack API. This attribute is sensitive and will only be
                retrieve once during creation.
            permissions: '- list of permissions associated with the role'
            role_name: '-  The name of a role. See role_names.'
            role_names: '- A list of role names. Values can be:'
            roles: '- A list of roles associated with the user.'
            service_name: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- the status of the user. should be normally set to ''ok''.'
            username: |-
                - the username generated for the user. This username can be used with
                the Openstack API.
        importStatements: []
    ovh_cloud_project_user_s3_credential:
        subCategory: ""
        description: Creates an S3 Credential for a user in a public cloud project.
        name: ovh_cloud_project_user_s3_credential
        title: ovh_cloud_project_user_s3_credential
        argumentDocs:
            access_key_id: '- the Access Key ID'
            secret_access_key: '- (Sensitive) the Secret Access Key'
            service_name: |-
                - (Required) The ID of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            user_id: '- (Required) The ID of a public cloud project''s user.'
        importStatements: []
    ovh_cloud_project_user_s3_policy:
        subCategory: ""
        description: Set the S3 Policy of a public cloud project user.
        name: ovh_cloud_project_user_s3_policy
        title: ovh_cloud_project_user_s3_policy
        examples:
            - name: policy
              manifest: |-
                {
                  "policy": "${jsonencode({\n    \"Statement\":[{\n      \"Sid\": \"RWContainer\",\n      \"Effect\": \"Allow\",\n      \"Action\":[\"s3:GetObject\", \"s3:PutObject\", \"s3:DeleteObject\", \"s3:ListBucket\", \"s3:ListMultipartUploadParts\", \"s3:ListBucketMultipartUploads\", \"s3:AbortMultipartUpload\", \"s3:GetBucketLocation\"],\n      \"Resource\":[\"arn:aws:s3:::hp-bucket\", \"arn:aws:s3:::hp-bucket/*\"]\n    }]\n  })}",
                  "service_name": "${ovh_cloud_project_user.user.service_name}",
                  "user_id": "${ovh_cloud_project_user.user.id}"
                }
              references:
                service_name: ovh_cloud_project_user.user.service_name
                user_id: ovh_cloud_project_user.user.id
              dependencies:
                ovh_cloud_project_user.user: |-
                    {
                      "description": "my user",
                      "role_names": [
                        "objectstore_operator"
                      ],
                      "service_name": "XXX"
                    }
                ovh_cloud_project_user_s3_credential.my_s3_credentials: |-
                    {
                      "service_name": "${ovh_cloud_project_user.user.service_name}",
                      "user_id": "${ovh_cloud_project_user.user.id}"
                    }
        argumentDocs:
            policy: '- (Required) The policy document. This is a JSON formatted string. See examples of policies on public documentation.'
            service_name: |-
                - (Required) The ID of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            user_id: '- (Required) The ID of a public cloud project''s user.'
        importStatements: []
    ovh_cloud_project_users:
        subCategory: ""
        description: Get the list of all users of a public cloud project.
        name: ovh_cloud_project_users
        title: ovh_cloud_project_users
        argumentDocs:
            creation_date: '- the date the user was created.'
            description: '- See Argument Reference above.'
            id: '- id of the role'
            name: '- name of the role'
            permissions: '- list of permissions associated with the role'
            roles: '- A list of roles associated with the user.'
            service_name: |-
                - (Required) The ID of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            status: '- the status of the user. should be normally set to ''ok''.'
            user_id: '- The ID of a public cloud project''s user.'
            username: |-
                - the username generated for the user. This username can be used with
                the Openstack API.
            users: '- The list of users of a public cloud project.'
        importStatements: []
    ovh_dbaas_logs_graylog_output_stream:
        subCategory: ""
        description: Creates a dbaas logs graylog output stream.
        name: ovh_dbaas_logs_graylog_output_stream
        title: ovh_dbaas_logs_graylog_output_stream
        argumentDocs:
            can_alert: '- Indicates if the current user can create alert on the stream'
            cold_storage_compression: '- Cold storage compression method. One of "LZMA", "GZIP", "DEFLATED", "ZSTD"'
            cold_storage_content: '- ColdStorage content. One of "ALL", "GLEF", "PLAIN"'
            cold_storage_enabled: '- Is Cold storage enabled?'
            cold_storage_notify_enabled: '- Notify on new Cold storage archive'
            cold_storage_retention: '- Cold storage retention in year'
            cold_storage_target: '- ColdStorage destination. One of "PCA", "PCS"'
            created_at: '- Stream creation'
            description: '- (Required) Stream description'
            indexing_enabled: '- Enable ES indexing'
            indexing_max_size: '- Maximum indexing size (in GB)'
            indexing_notify_enabled: '- If set, notify when size is near 80, 90 or 100 % of the maximum configured setting'
            is_editable: '- Indicates if you are allowed to edit entry'
            is_shareable: '- Indicates if you are allowed to share entry'
            nb_alert_condition: '- Number of alert condition'
            nb_archive: '- Number of coldstored archivesr'
            parent_stream_id: '- Parent stream ID'
            pause_indexing_on_max_size: '- If set, pause indexing when maximum size is reach'
            retention_id: '- Retention ID'
            service_name: '- (Required) The service name'
            stream_id: '- Stream ID'
            title: '- (Required) Stream description'
            updated_at: '- Stream last updater'
            web_socket_enabled: '- Enable Websocket'
        importStatements: []
    ovh_dbaas_logs_input:
        subCategory: ""
        description: Creates a dbaas logs input.
        name: ovh_dbaas_logs_input
        title: ovh_dbaas_logs_input
        examples:
            - name: input
              manifest: |-
                {
                  "allowed_networks": [
                    "10.0.0.0/16"
                  ],
                  "configuration": [
                    {
                      "logstash": [
                        {
                          "input_section": "  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n"
                        }
                      ]
                    }
                  ],
                  "description": "${ovh_dbaas_logs_output_graylog_stream.stream.description}",
                  "engine_id": "${data.ovh_dbaas_logs_input_engine.logstash.id}",
                  "exposed_port": "6154",
                  "nb_instance": 2,
                  "service_name": "${ovh_dbaas_logs_output_graylog_stream.stream.service_name}",
                  "stream_id": "${ovh_dbaas_logs_output_graylog_stream.stream.id}",
                  "title": "${ovh_dbaas_logs_output_graylog_stream.stream.title}"
                }
              references:
                description: ovh_dbaas_logs_output_graylog_stream.stream.description
                engine_id: data.ovh_dbaas_logs_input_engine.logstash.id
                service_name: ovh_dbaas_logs_output_graylog_stream.stream.service_name
                stream_id: ovh_dbaas_logs_output_graylog_stream.stream.id
                title: ovh_dbaas_logs_output_graylog_stream.stream.title
              dependencies:
                ovh_dbaas_logs_output_graylog_stream.stream: |-
                    {
                      "description": "my graylog stream",
                      "service_name": "....",
                      "title": "my stream"
                    }
        argumentDocs:
            allowed_networks: '- List of IP blocks'
            configuration: '- (Required) Input configuration'
            created_at: '- Input creation'
            description: '- (Required) Input description'
            engine_id: '- (Required) Input engine ID'
            exposed_port: '- Port'
            filter_section: '- (Optional) The filter section of logstash.conf'
            flowgger: '- (Optional) Flowgger configuration'
            hostname: '- Hostname'
            input_id: '- Input ID'
            input_section: '- (Required) The filter section of logstash.conf'
            is_restart_required: '- Indicate if input need to be restarted'
            log_format: '- Type of format to decode. One of "RFC5424", "LTSV", "GELF", "CAPNP"'
            log_framing: '- Indicates how messages are delimited. One of "LINE", "NUL", "SYSLEN", "CAPNP"'
            logstash: '- (Optional) Logstash configuration'
            nb_instance: '- Number of instance running'
            pattern_section: '- (Optional) The list of customs Grok patterns'
            public_address: '- Input IP address'
            service_name: '- (Required) service name'
            ssl_certificate: '- Input SSL certificate'
            status: '- init: configuration required, pending: ready to start, running: available'
            stream_id: '- (Required) Associated Graylog stream'
            title: '- (Required) Input title'
            updated_at: '- Input last update'
        importStatements: []
    ovh_dedicated_ceph_acl:
        subCategory: ""
        description: Creates a new ACL for dedicated CEPH cluster.
        name: ovh_dedicated_ceph_acl
        title: dedicated_ceph_acl
        examples:
            - name: my-acl
              manifest: |-
                {
                  "netmask": "255.255.255.255",
                  "network": "1.2.3.4",
                  "service_name": "${data.ovh_dedicated_ceph.my-ceph.id}"
                }
              references:
                service_name: data.ovh_dedicated_ceph.my-ceph.id
        argumentDocs:
            family: '- IP family. IPv4 or IPv6'
            netmask: '- (Required) The network mask to apply'
            network: '- (Required) The network IP to authorize'
            service_name: '- (Required) The internal name of your dedicated CEPH'
        importStatements: []
    ovh_dedicated_server_install_task:
        subCategory: ""
        description: Install your Dedicated Server
        name: ovh_dedicated_server_install_task
        title: dedicated_server_install_task
        examples:
            - name: server_install
              manifest: |-
                {
                  "bootid_on_destroy": "${data.ovh_dedicated_server_boots.rescue.result[0]}",
                  "service_name": "ns00000.ip-1-2-3.eu",
                  "template_name": "${ovh_me_installation_template.debian.template_name}"
                }
              references:
                bootid_on_destroy: data.ovh_dedicated_server_boots.rescue.result[0]
                template_name: ovh_me_installation_template.debian.template_name
              dependencies:
                ovh_me_installation_template.debian: |-
                    {
                      "base_template_name": "debian10_64",
                      "customization": [
                        {
                          "change_log": "v1",
                          "custom_hostname": "mytest",
                          "ssh_key_name": "${ovh_me_ssh_key.key.key_name}"
                        }
                      ],
                      "default_language": "en",
                      "template_name": "mydebian10"
                    }
                ovh_me_ssh_key.key: |-
                    {
                      "key": "ssh-ed25519 AAAAC3...",
                      "key_name": "mykey"
                    }
        argumentDocs:
            bootid_on_destroy: '- If set, reboot the server on the specified boot id during destroy phase.'
            comment: '- Details of this task. (should be Install asked)'
            details: '- see details block below.'
            details.change_log: '- Template change log details.'
            details.custom_hostname: '- Set up the server using the provided hostname instead of the default hostname.'
            details.disk_group_id: '- Disk group id.'
            details.install_rtm: '- set to true to install RTM.'
            details.install_sql_server: '- set to true to install sql server (Windows template only).'
            details.language: '- language.'
            details.no_raid: '- set to true to disable RAID.'
            details.post_installation_script_link: '- Indicate the URL where your postinstall customisation script is located.'
            details.post_installation_script_return: '- Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is ''loh1Xee7eo OK OK OK UGh8Ang1Gu''.'
            details.reset_hw_raid: '- set to true to make a hardware raid reset.'
            details.soft_raid_devices: '- soft raid devices.'
            details.ssh_key_name: '- Name of the ssh key that should be installed. Password login will be disabled.'
            details.use_distrib_kernel: '- Use the distribution''s native kernel instead of the recommended OVHcloud Kernel.'
            details.use_spla: '- set to true to use SPLA.'
            done_date: '- Completion date in RFC3339 format.'
            function: '- Function name (should be hardInstall).'
            id: '- The task id'
            last_update: '- Last update in RFC3339 format.'
            partition_scheme_name: '- Partition scheme name.'
            service_name: '- (Required) The service_name of your dedicated server.'
            start_date: '- Task creation date in RFC3339 format.'
            status: '- Task status (should be done)'
            template_name: '- (Required) Template name.'
        importStatements: []
    ovh_dedicated_server_reboot_task:
        subCategory: ""
        description: Reboot your Dedicated Server
        name: ovh_dedicated_server_reboot_task
        title: dedicated_server_reboot_task
        examples:
            - name: server_reboot
              manifest: |-
                {
                  "keepers": [
                    "${ovh_dedicated_server_update.server_on_rescue.boot_id}"
                  ],
                  "service_name": "${data.ovh_dedicated_server_boots.rescue.service_name}"
                }
              references:
                service_name: data.ovh_dedicated_server_boots.rescue.service_name
              dependencies:
                ovh_dedicated_server_update.server_on_rescue: |-
                    {
                      "boot_id": "${data.ovh_dedicated_server_boots.rescue.result[0]}",
                      "monitoring": true,
                      "service_name": "ns00000.ip-1-2-3.eu",
                      "state": "ok"
                    }
        argumentDocs:
            comment: '- Details of this task. (should be Reboot asked)'
            done_date: '- Completion date in RFC3339 format.'
            function: '- Function name (should be hardReboot).'
            id: '- The task id'
            keepers: '- List of values traccked to trigger reboot, used also to form implicit dependencies'
            last_update: '- Last update in RFC3339 format.'
            service_name: '- (Required) The service_name of your dedicated server.'
            start_date: '- Task creation date in RFC3339 format.'
            status: '- Task status (should be done)'
        importStatements: []
    ovh_dedicated_server_update:
        subCategory: ""
        description: Update various properties of your Dedicated Server
        name: ovh_dedicated_server_update
        title: dedicated_server_update
        examples:
            - name: server
              manifest: |-
                {
                  "boot_id": "${data.ovh_dedicated_server_boots.rescue.result[0]}",
                  "monitoring": true,
                  "service_name": "ns00000.ip-1-2-3.eu",
                  "state": "ok"
                }
              references:
                boot_id: data.ovh_dedicated_server_boots.rescue.result[0]
        argumentDocs:
            boot_id: '- boot id of the server'
            monitoring: '- Icmp monitoring state'
            service_name: '- (Required) The service_name of your dedicated server.'
            state: '- error, hacked, hackedBlocked, ok'
        importStatements: []
    ovh_domain_zone:
        subCategory: ""
        description: Creates a domain zone.
        name: ovh_domain_zone
        title: ovh_domain_zone
        examples:
            - name: zone
              manifest: |-
                {
                  "ovh_subsidiary": "${data.ovh_order_cart.mycart.ovh_subsidiary}",
                  "payment_mean": "fidelity",
                  "plan": [
                    {
                      "configuration": [
                        {
                          "label": "zone",
                          "value": "myzone.mydomain.com"
                        },
                        {
                          "label": "template",
                          "value": "minimized"
                        }
                      ],
                      "duration": "${data.ovh_order_cart_product_plan.zone.selected_price.0.duration}",
                      "plan_code": "${data.ovh_order_cart_product_plan.zone.plan_code}",
                      "pricing_mode": "${data.ovh_order_cart_product_plan.zone.selected_price.0.pricing_mode}"
                    }
                  ]
                }
              references:
                ovh_subsidiary: data.ovh_order_cart.mycart.ovh_subsidiary
                plan.duration: data.ovh_order_cart_product_plan.zone.selected_price.0.duration
                plan.plan_code: data.ovh_order_cart_product_plan.zone.plan_code
                plan.pricing_mode: data.ovh_order_cart_product_plan.zone.selected_price.0.pricing_mode
        argumentDocs:
            catalog_name: '- Catalog name'
            configuration: '- (Optional) Representation of a configuration item for personalizing product'
            date: '- date'
            description: '- description'
            details: '- Information about a Bill entry'
            dnssec_supported: '- Is DNSSEC supported by this zone'
            domain: '- expiration date'
            duration: '- (Required) duration'
            expiration_date: '- expiration date'
            has_dns_anycast: '- hasDnsAnycast flag of the DNS zone'
            label: '- (Required) Identifier of the resource'
            last_update: '- Last update date of the DNS zone'
            name: '- Zone name'
            name_servers: '- Name servers that host the DNS zone'
            order: '- Details about an Order'
            order_detail_id: '- order detail id'
            order_id: '- order id'
            ovh_subsidiary: '- (Required) OVHcloud Subsidiary'
            payment_mean: '- (Required) OVHcloud payment mode (One of "default-payment-mean", "fidelity", "ovh-account")'
            plan: '- (Required) Product Plan to order'
            plan_code: '- (Required) Plan code'
            plan_option: '- (Optional) Product Plan to order'
            pricing_mode: '- (Required) Pricing model identifier'
            quantity: '- quantity'
            value: '- (Required) Path to the resource in API.OVH.COM'
        importStatements: []
    ovh_domain_zone_record:
        subCategory: ""
        description: Provides a OVHcloud domain zone resource.
        name: ovh_domain_zone_record
        title: ovh_domain_zone_record
        examples:
            - name: test
              manifest: |-
                {
                  "fieldtype": "A",
                  "subdomain": "test",
                  "target": "0.0.0.0",
                  "ttl": "3600",
                  "zone": "testdemo.ovh"
                }
        argumentDocs:
            fieldType: '- The type of the record'
            fieldtype: '- (Required) The type of the record'
            id: '- The record ID'
            subDomain: '- The name of the record'
            subdomain: '- (Required) The name of the record'
            target: '- (Required) The value of the record'
            ttl: '- (Optional) The TTL of the record'
            zone: '- (Required) The domain to add the record to'
        importStatements: []
    ovh_domain_zone_redirection:
        subCategory: ""
        description: Provides a OVHcloud domain zone resource.
        name: ovh_domain_zone_redirection
        title: ovh_domain_zone_redirection
        examples:
            - name: test
              manifest: |-
                {
                  "subdomain": "test",
                  "target": "http://www.ovh",
                  "type": "visiblePermanent",
                  "zone": "testdemo.ovh"
                }
        argumentDocs:
            description: '- (Optional) A description of this redirection'
            id: '- The redirection ID'
            invisible: -> Redirection by html frame
            keywords: '- (Optional) Keywords to describe this redirection'
            subDomain: '- The name of the redirection'
            subdomain: '- (Optional) The name of the redirection'
            target: '- (Required) The value of the redirection'
            title: '- (Optional) Title of this redirection'
            type: '- (Required) The type of the redirection, with values:'
            visible: -> Redirection by http code 302
            visiblePermanent: -> Redirection by http code 301
            zone: '- (Required) The domain to add the redirection to'
        importStatements: []
    ovh_ip_reverse:
        subCategory: ""
        description: Provides a OVHcloud IP reverse resource.
        name: ovh_ip_reverse
        title: ovh_ip_reverse
        examples:
            - name: test
              manifest: |-
                {
                  "ip": "192.0.2.0/24",
                  "ip_reverse": "192.0.2.1",
                  "reverse": "example.com"
                }
        argumentDocs:
            ip: '- (Required) The IP block to which the IP belongs'
            ip_reverse: '- (Required) The IP to set the reverse of'
            reverse: '- (Required) The value of the reverse'
        importStatements: []
    ovh_ip_service:
        subCategory: ""
        description: Attach an Ip block to a VRack.
        name: ovh_ip_service
        title: vrack_ip
        examples:
            - name: ipblock
              manifest: |-
                {
                  "description": "${data.ovh_order_cart.mycart.description}",
                  "ovh_subsidiary": "${data.ovh_order_cart.mycart.ovh_subsidiary}",
                  "payment_mean": "ovh-account",
                  "plan": [
                    {
                      "configuration": [
                        {
                          "label": "country",
                          "value": "FR"
                        }
                      ],
                      "duration": "${data.ovh_order_cart_product_plan.ipblock.selected_price.0.duration}",
                      "plan_code": "${data.ovh_order_cart_product_plan.ipblock.plan_code}",
                      "pricing_mode": "${data.ovh_order_cart_product_plan.ipblock.selected_price.0.pricing_mode}"
                    }
                  ]
                }
              references:
                description: data.ovh_order_cart.mycart.description
                ovh_subsidiary: data.ovh_order_cart.mycart.ovh_subsidiary
                plan.duration: data.ovh_order_cart_product_plan.ipblock.selected_price.0.duration
                plan.plan_code: data.ovh_order_cart_product_plan.ipblock.plan_code
                plan.pricing_mode: data.ovh_order_cart_product_plan.ipblock.selected_price.0.pricing_mode
              dependencies:
                ovh_vrack.vrack: |-
                    {
                      "description": "${data.ovh_order_cart.mycart.description}",
                      "name": "${data.ovh_order_cart.mycart.description}",
                      "ovh_subsidiary": "${data.ovh_order_cart.mycart.ovh_subsidiary}",
                      "payment_mean": "fidelity",
                      "plan": [
                        {
                          "duration": "${data.ovh_order_cart_product_plan.vrack.selected_price.0.duration}",
                          "plan_code": "${data.ovh_order_cart_product_plan.vrack.plan_code}",
                          "pricing_mode": "${data.ovh_order_cart_product_plan.vrack.selected_price.0.pricing_mode}"
                        }
                      ]
                    }
                ovh_vrack_ip.vrackblock: |-
                    {
                      "block": "${ovh_ip_service.ipblock.ip}",
                      "service_name": "${ovh_vrack.vrack.service_name}"
                    }
        argumentDocs:
            block: '- (Required) Your IP block.'
            gateway: '- Your gateway'
            ip: '- Your IP block'
            service_name: '- (Required) The internal name of your vrack'
            zone: '- Where you want your block announced on the network'
        importStatements: []
    ovh_iploadbalancing:
        subCategory: ""
        description: Orders an IP load balancing.
        name: ovh_iploadbalancing
        title: ovh_iploadbalancing
        examples:
            - name: iplb-lb1
              manifest: |-
                {
                  "display_name": "my ip loadbalancing",
                  "ovh_subsidiary": "${data.ovh_order_cart.mycart.ovh_subsidiary}",
                  "payment_mean": "ovh-account",
                  "plan": [
                    {
                      "duration": "${data.ovh_order_cart_product_plan.iplb.selected_price.0.duration}",
                      "plan_code": "${data.ovh_order_cart_product_plan.iplb.plan_code}",
                      "pricing_mode": "${data.ovh_order_cart_product_plan.iplb.selected_price.0.pricing_mode}"
                    }
                  ],
                  "plan_option": [
                    {
                      "duration": "${data.ovh_order_cart_product_options_plan.bhs.selected_price.0.duration}",
                      "plan_code": "${data.ovh_order_cart_product_options_plan.bhs.plan_code}",
                      "pricing_mode": "${data.ovh_order_cart_product_options_plan.bhs.selected_price.0.pricing_mode}"
                    }
                  ]
                }
              references:
                ovh_subsidiary: data.ovh_order_cart.mycart.ovh_subsidiary
                plan.duration: data.ovh_order_cart_product_plan.iplb.selected_price.0.duration
                plan.plan_code: data.ovh_order_cart_product_plan.iplb.plan_code
                plan.pricing_mode: data.ovh_order_cart_product_plan.iplb.selected_price.0.pricing_mode
                plan_option.duration: data.ovh_order_cart_product_options_plan.bhs.selected_price.0.duration
                plan_option.plan_code: data.ovh_order_cart_product_options_plan.bhs.plan_code
                plan_option.pricing_mode: data.ovh_order_cart_product_options_plan.bhs.selected_price.0.pricing_mode
        argumentDocs:
            catalog_name: '- Catalog name'
            configuration: '- (Optional) Representation of a configuration item for personalizing product'
            date: '- date'
            description: '- description'
            details: '- Information about a Bill entry'
            display_name: '- Set the name displayed in ManagerV6 for your iplb (max 50 chars)'
            domain: '- expiration date'
            duration: '- (Required) duration'
            expiration_date: '- expiration date'
            ip_loadbalancing: '- Your IP load balancing'
            ipv4: '- The IPV4 associated to your IP load balancing'
            ipv6: '- The IPV6 associated to your IP load balancing. DEPRECATED.'
            label: '- (Required) Identifier of the resource'
            metrics_token: '- The metrics token associated with your IP load balancing'
            name: '- The zone three letter code'
            offer: '- The offer of your IP load balancing'
            order: '- Details about an Order'
            order_detail_id: '- order detail id'
            order_id: '- order id'
            orderable_zone: '- Available additional zone for your Load Balancer'
            ovh_subsidiary: '- (Required) OVHcloud Subsidiary'
            payment_mean: '- (Required) OVHcloud payment mode (One of "default-payment-mean", "fidelity", "ovh-account")'
            plan: '- (Required) Product Plan to order'
            plan_code: '- (Required) Plan code'
            plan_option: '- (Optional) Product Plan to order'
            pricing_mode: '- (Required) Pricing model identifier'
            quantity: '- quantity'
            service_name: '- The internal name of your IP load balancing'
            ssl_configuration: '- Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of "intermediate", "modern".'
            state: '- Current state of your IP'
            value: '- (Required) Path to the resource in API.OVH.COM'
            vrack_eligibility: '- Vrack eligibility'
            vrack_name: '- Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product'
            zone: '- Location where your service is'
        importStatements: []
    ovh_iploadbalancing_http_route:
        subCategory: ""
        description: Manage http route for a loadbalancer service.
        name: ovh_iploadbalancing_http_route
        title: ovh_iploadbalancing_http_route
        examples:
            - name: httpsredirect
              manifest: |-
                {
                  "action": [
                    {
                      "status": 302,
                      "target": "https://${host}${path}${arguments}",
                      "type": "redirect"
                    }
                  ],
                  "display_name": "Redirect to HTTPS",
                  "service_name": "loadbalancer-xxxxxxxxxxxxxxxxxx",
                  "weight": 1
                }
        argumentDocs:
            action: '- (Required) Action triggered when all rules match'
            display_name: '- Human readable name for your route, this field is for you'
            field: '- Name of the field to match like "protocol" or "host" "/ipLoadbalancing/{serviceName}/route/availableRules" for a list of available rules'
            frontend_id: '- Route traffic for this frontend'
            match: '- Matching operator. Not all operators are available for all fields. See "availableRules"'
            negate: '- Invert the matching operator effect'
            pattern: '- Value to match against this match. Interpretation if this field depends on the match and field'
            rule_id: '- Id of your rule'
            rules: '- List of rules to match to trigger action'
            service_name: '- (Required) The internal name of your IP load balancing'
            status: '- HTTP status code for "redirect" and "reject" actions'
            sub_field: '- Name of sub-field, if applicable. This may be a Cookie or Header name for instance'
            target: '- Farm ID for "farm" action type or URL template for "redirect" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target'
            type: '- (Required) Action to trigger if all the rules of this route matches'
            weight: '- Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action'
        importStatements: []
    ovh_iploadbalancing_http_route_rule:
        subCategory: ""
        description: Manage rules for HTTP route.
        name: ovh_iploadbalancing_http_route_rule
        title: ovh_iploadbalancing_http_route_rule
        examples:
            - name: examplerule
              manifest: |-
                {
                  "display_name": "Match example.com host",
                  "field": "host",
                  "match": "is",
                  "negate": false,
                  "pattern": "example.com",
                  "route_id": "${ovh_iploadbalancing_http_route.httpsredirect.id}",
                  "service_name": "loadbalancer-xxxxxxxxxxxxxxxxxx"
                }
              dependencies:
                ovh_iploadbalancing_http_route.httpsredirect: |-
                    {
                      "action": [
                        {
                          "status": 302,
                          "target": "https://${host}${path}${arguments}",
                          "type": "redirect"
                        }
                      ],
                      "display_name": "Redirect to HTTPS",
                      "frontend_id": 11111,
                      "service_name": "loadbalancer-xxxxxxxxxxxxxxxxxx",
                      "weight": 1
                    }
            - name: examplerule
              manifest: |-
                {
                  "display_name": "Match example.com Host header",
                  "field": "headers",
                  "match": "is",
                  "negate": false,
                  "pattern": "example.com",
                  "route_id": "${ovh_iploadbalancing_http_route.httpsredirect.id}",
                  "service_name": "loadbalancer-xxxxxxxxxxxxxxxxxx",
                  "sub_field": "Host"
                }
        argumentDocs:
            display_name: '- Human readable name for your rule, this field is for you'
            field: '- (Required) Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules'
            match: '- (Required) Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"'
            negate: '- Invert the matching operator effect'
            pattern: '- Value to match against this match. Interpretation if this field depends on the match and field'
            route_id: '- (Required) The route to apply this rule'
            service_name: '- (Required) The internal name of your IP load balancing'
            sub_field: '- Name of sub-field, if applicable. This may be a Cookie or Header name for instance'
        importStatements: []
    ovh_iploadbalancing_refresh:
        subCategory: ""
        description: Applies changes from other ovh_iploadbalancing_* resources to the production configuration of loadbalancers.
        name: ovh_iploadbalancing_refresh
        title: iploadbalancing_refresh
        examples:
            - name: mylb
              manifest: |-
                {
                  "keepers": [
                    "${ovh_iploadbalancing_tcp_farm_server.backend.*.address}"
                  ],
                  "service_name": "${data.ovh_iploadbalancing.lb.id}"
                }
              dependencies:
                ovh_iploadbalancing_tcp_farm.farmname: |-
                    {
                      "port": 8080,
                      "service_name": "${data.ovh_iploadbalancing.lb.id}",
                      "zone": "all"
                    }
                ovh_iploadbalancing_tcp_farm_server.backend: |-
                    {
                      "address": "4.5.6.7",
                      "backup": true,
                      "display_name": "mybackend",
                      "farm_id": "${ovh_iploadbalancing_tcp_farm.farmname.id}",
                      "port": 80,
                      "probe": true,
                      "proxy_protocol_version": "${v2}",
                      "service_name": "${data.ovh_iploadbalancing.lb.id}",
                      "ssl": false,
                      "status": "active",
                      "weight": 2
                    }
        argumentDocs:
            keepers: '- List of values tracked to trigger refresh, used also to form implicit dependencies'
            service_name: '- (Required) The internal name of your IP load balancing'
        importStatements: []
    ovh_iploadbalancing_tcp_farm:
        subCategory: ""
        description: Creates a backend server group (farm).
        name: ovh_iploadbalancing_tcp_farm
        title: iploadbalancing_tcp_farm
        examples:
            - name: farmname
              manifest: |-
                {
                  "display_name": "ingress-8080-gra",
                  "service_name": "${data.ovh_iploadbalancing.lb.id}",
                  "zone": "GRA"
                }
        argumentDocs:
            balance: '- Load balancing algorithm. roundrobin if null (first, leastconn, roundrobin, source)'
            display_name: '- Readable label for loadbalancer farm'
            force_ssl: '- Force use of SSL (TLS)'
            interval: '- probe interval, Value between 30 and 3600 seconds, default 30'
            match: '- What to match pattern against (contains, default, internal, matches, status)'
            method: '- HTTP probe method (GET, HEAD, OPTIONS, internal)'
            negate: '- Negate probe result'
            pattern: '- Pattern to match against match'
            port: '- Port attached to your farm ([1..49151]). Inherited from frontend if null'
            probe: '- define a backend healthcheck probe'
            service_name: '- (Required) The internal name of your IP load balancing'
            stickiness: "- \tStickiness type. No stickiness if null (sourceIp)"
            type: '- (Required) Valid values : http, internal, mysql, oco, pgsql, smtp, tcp'
            url: '- URL for HTTP probe type.'
            vrack_network_id: '- Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack'
            zone: '- (Required) Zone where the farm will be defined (ie. GRA, BHS also supports ALL)'
        importStatements: []
    ovh_iploadbalancing_tcp_farm_server:
        subCategory: ""
        description: Creates a backend server entry linked to farm.
        name: ovh_iploadbalancing_tcp_farm_server
        title: iploadbalancing_tcp_farm_server
        examples:
            - name: backend
              manifest: |-
                {
                  "address": "4.5.6.7",
                  "backup": true,
                  "display_name": "mybackend",
                  "farm_id": "${ovh_iploadbalancing_tcp_farm.farmname.id}",
                  "port": 80,
                  "probe": true,
                  "proxy_protocol_version": "${v2}",
                  "service_name": "${data.ovh_iploadbalancing.lb.id}",
                  "ssl": false,
                  "status": "active",
                  "weight": 2
                }
              references:
                proxy_protocol_version: v2
              dependencies:
                ovh_iploadbalancing_tcp_farm.farmname: |-
                    {
                      "port": 8080,
                      "service_name": "${data.ovh_iploadbalancing.lb.id}",
                      "zone": "all"
                    }
        argumentDocs:
            address: '- Address of the backend server (IP from either internal or OVHcloud network)'
            backup: '- is it a backup server used in case of failure of all the non-backup backends'
            cookie: '- Value of the stickiness cookie used for this backend.'
            display_name: '- Label for the server'
            farm_id: '- ID of the farm this server is attached to'
            port: '- Port that backend will respond on'
            probe: '- defines if backend will be probed to determine health and keep as active in farm if healthy'
            proxy_protocol_version: '- version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (v1, v2, v2-ssl, v2-ssl-cn)'
            service_name: '- (Required) The internal name of your IP load balancing'
            ssl: '- is the connection ciphered with SSL (TLS)'
            status: '- backend status - active or inactive'
            weight: '- used in loadbalancing algorithm'
        importStatements: []
    ovh_iploadbalancing_tcp_frontend:
        subCategory: ""
        description: Creates a frontend for an IP Load balancing service.
        name: ovh_iploadbalancing_tcp_frontend
        title: iploadbalancing_tcp_frontend
        examples:
            - name: testfrontend
              manifest: |-
                {
                  "default_farm_id": "${ovh_iploadbalancing_tcp_farm.farm80.id}",
                  "display_name": "ingress-8080-gra",
                  "port": "80,443",
                  "service_name": "${data.ovh_iploadbalancing.lb.service_name}",
                  "zone": "all"
                }
              dependencies:
                ovh_iploadbalancing_tcp_farm.farm80: |-
                    {
                      "display_name": "ingress-8080-gra",
                      "port": 80,
                      "service_name": "${data.ovh_iploadbalancing.lb.service_name}",
                      "zone": "all"
                    }
        argumentDocs:
            allowed_source: '- Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.'
            dedicated_ipfo: '- Only attach frontend on these ip. No restriction if null. List of Ip blocks.'
            default_farm_id: '- Default TCP Farm of your frontend'
            default_ssl_id: '- Default ssl served to your customer'
            disabled: '- Disable your frontend. Default: ''false'''
            display_name: '- Human readable name for your frontend, this field is for you'
            id: '- Id of your frontend'
            port: |-
                - Port(s) attached to your frontend. Supports single port (numerical value),
                range (2 dash-delimited increasing ports) and comma-separated list of 'single port'
                and/or 'range'. Each port must be in the [1;49151] range
            service_name: '- (Required) The internal name of your IP load balancing'
            ssl: '- SSL deciphering. Default: ''false'''
            zone: '- (Required) Zone where the frontend will be defined (ie. gra, bhs also supports all)'
        importStatements: []
    ovh_iploadbalancing_tcp_route:
        subCategory: ""
        description: Manage tcp route for a loadbalancer service.
        name: ovh_iploadbalancing_tcp_route
        title: ovh_iploadbalancing_tcp_route
        examples:
            - name: tcpreject
              manifest: |-
                {
                  "action": [
                    {
                      "type": "reject"
                    }
                  ],
                  "service_name": "loadbalancer-xxxxxxxxxxxxxxxxxx",
                  "weight": 1
                }
        argumentDocs:
            action: '- (Required) Action triggered when all rules match'
            display_name: '- Human readable name for your route, this field is for you'
            field: '- Name of the field to match like "protocol" or "host" "/ipLoadbalancing/{serviceName}/route/availableRules" for a list of available rules'
            frontend_id: '- Route traffic for this frontend'
            match: '- Matching operator. Not all operators are available for all fields. See "availableRules"'
            negate: '- Invert the matching operator effect'
            pattern: '- Value to match against this match. Interpretation if this field depends on the match and field'
            rule_id: '- Id of your rule'
            rules: '- List of rules to match to trigger action'
            service_name: '- (Required) The internal name of your IP load balancing'
            status: '- Route status. Routes in "ok" state are ready to operate'
            sub_field: '- Name of sub-field, if applicable. This may be a Cookie or Header name for instance'
            target: '- Farm ID for "farm" action type, empty for others.'
            type: '- (Required) Action to trigger if all the rules of this route matches'
            weight: '- Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action'
        importStatements: []
    ovh_iploadbalancing_tcp_route_rule:
        subCategory: ""
        description: Manage rules for TCP route.
        name: ovh_iploadbalancing_tcp_route_rule
        title: ovh_iploadbalancing_tcp_route_rule
        examples:
            - name: examplerule
              manifest: |-
                {
                  "display_name": "Match example.com host",
                  "field": "sni",
                  "match": "is",
                  "negate": false,
                  "pattern": "example.com",
                  "route_id": "${ovh_iploadbalancing_tcp_route.reject.id}",
                  "service_name": "loadbalancer-xxxxxxxxxxxxxxxxxx"
                }
              references:
                route_id: ovh_iploadbalancing_tcp_route.reject.id
              dependencies:
                ovh_iploadbalancing_tcp_route.reject: |-
                    {
                      "action": [
                        {
                          "type": "reject"
                        }
                      ],
                      "frontend_id": 11111,
                      "service_name": "loadbalancer-xxxxxxxxxxxxxxxxxx",
                      "weight": 1
                    }
        argumentDocs:
            display_name: '- Human readable name for your rule, this field is for you'
            field: '- (Required) Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules'
            match: '- (Required) Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"'
            negate: '- Invert the matching operator effect'
            pattern: '- Value to match against this match. Interpretation if this field depends on the match and field'
            route_id: '- (Required) The route to apply this rule'
            service_name: '- (Required) The internal name of your IP load balancing'
            sub_field: '- Name of sub-field, if applicable. This may be a Cookie or Header name for instance'
        importStatements: []
    ovh_iploadbalancing_vrack_network:
        subCategory: ""
        description: Manage a vrack network for your IP Loadbalancing service.
        name: ovh_iploadbalancing_vrack_network
        title: ovh_iploadbalancing_vrack_network
        examples:
            - name: network
              manifest: |-
                {
                  "display_name": "mynetwork",
                  "nat_ip": "10.0.0.0/27",
                  "service_name": "${ovh_vrack_iploadbalancing.viplb.ip_loadbalancing}",
                  "subnet": "10.0.0.0/16",
                  "vlan": 1
                }
              references:
                service_name: ovh_vrack_iploadbalancing.viplb.ip_loadbalancing
              dependencies:
                ovh_iploadbalancing_tcp_farm.testfarm: |-
                    {
                      "display_name": "mytcpbackends",
                      "port": 80,
                      "service_name": "${ovh_iploadbalancing_vrack_network.network.service_name}",
                      "vrack_network_id": "${ovh_iploadbalancing_vrack_network.network.vrack_network_id}",
                      "zone": "${tolist(data.ovh_iploadbalancing.iplb.zone)[0]}"
                    }
                ovh_vrack_iploadbalancing.viplb: |-
                    {
                      "ip_loadbalancing": "${data.ovh_iploadbalancing.iplb.service_name}",
                      "service_name": "xxx"
                    }
        argumentDocs:
            display_name: '- Human readable name for your vrack network'
            farm_id: '- This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms vrack_network_id attribute'
            nat_ip: '- (Required) An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer'
            service_name: '- (Required) The internal name of your IP load balancing'
            subnet: '- (Required) IP block of the private network in the vRack'
            vlan: '- VLAN of the private network in the vRack. 0 if the private network is not in a VLAN'
            vrack_network_id: '- (Required) Internal Load Balancer identifier of the vRack private network'
        importStatements: []
    ovh_iploadbalancing_vrack_networks:
        subCategory: ""
        description: Get the list of Vrack network ids available for your IPLoadbalancer associated with your OVHcloud account.
        name: ovh_iploadbalancing_vrack_networks
        title: ovh_iploadbalancing_vrack_networks
        argumentDocs:
            result: '- The list of vrack network ids.'
            service_name: '- (Required) The internal name of your IP load balancing'
            subnet: '- Filters networks on the subnet.'
            vlan_id: '- Filters networks on the vlan id.'
        importStatements: []
    ovh_me_identity_user:
        subCategory: ""
        description: Creates an identity user.
        name: ovh_me_identity_user
        title: ovh_me_identity_user
        examples:
            - name: my_user
              manifest: |-
                {
                  "description": "Some custom description",
                  "email": "my_login@example.com",
                  "group": "DEFAULT",
                  "login": "my_login",
                  "password": "super-s3cr3t!password"
                }
        argumentDocs:
            creation: '- Creation date of this user.'
            description: '- User description.'
            email: '- User''s email.'
            group: '- User''s group.'
            last_update: '- Last update of this user.'
            login: '- User''s login suffix.'
            password: '- User''s password.'
            password_last_update: '- When the user changed his password for the last time.'
            status: '- Current user''s status.'
        importStatements: []
    ovh_me_installation_template:
        subCategory: ""
        description: Creates a custom installation template available for dedicated servers.
        name: ovh_me_installation_template
        title: ovh_me_installation_template
        examples:
            - name: mytemplate
              manifest: |-
                {
                  "base_template_name": "centos7_64",
                  "default_language": "fr",
                  "template_name": "mytemplate"
                }
        argumentDocs:
            available_languages: ': List of all language available for this template.'
            base_template_name: ': (Required) OVHcloud template name yours will be based on, choose one among the list given by compatibleTemplates function.'
            beta: ': This distribution is new and, although tested and functional, may still display odd behaviour.'
            bit_format: ': This template bit format (32 or 64).'
            category: ': Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation).'
            change_log: ': (DEPRECATED) Template change log details.'
            custom_hostname: ': Set up the server using the provided hostname instead of the default hostname.'
            customization: ':'
            default_language: ': (Required)  The default language of this template.'
            deprecated: ': is this distribution deprecated.'
            description: ': information about this template.'
            distribution: ': the distribution this template is based on.'
            family: ': this template family type (bsd,linux,solaris,windows).'
            filesystems: ': Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs).'
            hard_raid_configuration: ': This distribution supports hardware raid configuration through the OVHcloud API.'
            id: ': This template name.'
            last_modification: ': Date of last modification of the base image.'
            post_installation_script_link: ': Indicate the URL where your postinstall customisation script is located.'
            post_installation_script_return: ': indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is ''loh1Xee7eo OK OK OK UGh8Ang1Gu''.'
            rating: ': (DEPRECATED) Rating.'
            remove_default_partition_schemes: ': (Required) Remove default partition schemes at creation.'
            ssh_key_name: ': Name of the ssh key that should be installed. Password login will be disabled.'
            supports_distribution_kernel: ': This distribution supports installation using the distribution''s native kernel instead of the recommended OVHcloud kernel.'
            supports_gpt_label: ': This distribution supports the GUID Partition Table (GPT), providing up to 128 partitions that can have more than 2TB.'
            supports_rtm: ': This distribution supports RTM software.'
            supports_sql_server: ': This distribution supports the microsoft SQL server.'
            supports_uefi: ': This distribution supports UEFI setup (no,only,yes).'
            template_name: ': (Required)  This template name.'
            use_distribution_kernel: ': Use the distribution''s native kernel instead of the recommended OV'
        importStatements: []
    ovh_me_installation_template_partition_scheme:
        subCategory: ""
        description: Creates a partition scheme for a custom installation template available for dedicated servers.
        name: ovh_me_installation_template_partition_scheme
        title: ovh_me_installation_template_partition_scheme
        examples:
            - name: scheme
              manifest: |-
                {
                  "name": "myscheme",
                  "priority": 1,
                  "template_name": "${ovh_me_installation_template.mytemplate.template_name}"
                }
              references:
                template_name: ovh_me_installation_template.mytemplate.template_name
              dependencies:
                ovh_me_installation_template.mytemplate: |-
                    {
                      "base_template_name": "centos7_64",
                      "default_language": "fr",
                      "template_name": "mytemplate"
                    }
        argumentDocs:
            id: ': a fake id associated with this partition scheme formatted as follow: template_name/name'
            name: ': (Required) (Required) This partition scheme name.'
            priority: ': on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default, among all the compatible partitioning schemes (given the underlying hardware specifications).'
            template_name: ': (Required) The template name of the partition scheme.'
        importStatements: []
    ovh_me_installation_template_partition_scheme_hardware_raid:
        subCategory: ""
        description: Creates a hardware raid group in the partition scheme of a custom installation template available for dedicated servers.
        name: ovh_me_installation_template_partition_scheme_hardware_raid
        title: ovh_me_installation_template_partition_scheme_hardware_raid
        examples:
            - name: group1
              manifest: |-
                {
                  "disks": [
                    "[c1:d1,c1:d2,c1:d3]",
                    "[c1:d10,c1:d20,c1:d30]"
                  ],
                  "mode": "raid50",
                  "name": "group1",
                  "scheme_name": "${ovh_me_installation_template_partition_scheme.scheme.name}",
                  "step": 1,
                  "template_name": "${ovh_me_installation_template_partition_scheme.scheme.template_name}"
                }
              references:
                scheme_name: ovh_me_installation_template_partition_scheme.scheme.name
                template_name: ovh_me_installation_template_partition_scheme.scheme.template_name
              dependencies:
                ovh_me_installation_template.mytemplate: |-
                    {
                      "base_template_name": "centos7_64",
                      "default_language": "fr",
                      "template_name": "mytemplate"
                    }
                ovh_me_installation_template_partition_scheme.scheme: |-
                    {
                      "name": "myscheme",
                      "priority": 1,
                      "template_name": "${ovh_me_installation_template.mytemplate.template_name}"
                    }
        argumentDocs:
            disks: ': Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id.'
            id: ': a fake id associated with this partition scheme hardware raid group formatted as follow: template_name/scheme_name/name'
            mode: ': RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60).'
            name: ': Hardware RAID name.'
            scheme_name: ': (Required) The partition scheme name.'
            step: ': Specifies the creation order of the hardware RAID.'
            template_name: ': (Required) The template name of the partition scheme.'
        importStatements: []
    ovh_me_installation_template_partition_scheme_partition:
        subCategory: ""
        description: Creates a partition in the partition scheme of a custom installation template available for dedicated servers.
        name: ovh_me_installation_template_partition_scheme_partition
        title: ovh_me_installation_template_partition_scheme_partition
        examples:
            - name: root
              manifest: |-
                {
                  "filesystem": "ext4",
                  "mountpoint": "/",
                  "order": 1,
                  "scheme_name": "${ovh_me_installation_template_partition_scheme.scheme.name}",
                  "size": "400",
                  "template_name": "${ovh_me_installation_template_partition_scheme.scheme.template_name}",
                  "type": "primary"
                }
              references:
                scheme_name: ovh_me_installation_template_partition_scheme.scheme.name
                template_name: ovh_me_installation_template_partition_scheme.scheme.template_name
              dependencies:
                ovh_me_installation_template.mytemplate: |-
                    {
                      "base_template_name": "centos7_64",
                      "default_language": "fr",
                      "template_name": "mytemplate"
                    }
                ovh_me_installation_template_partition_scheme.scheme: |-
                    {
                      "name": "myscheme",
                      "priority": 1,
                      "template_name": "${ovh_me_installation_template.mytemplate.template_name}"
                    }
        argumentDocs:
            filesystem: ': Partition filesystem.'
            id: ': a fake id associated with this partition scheme partition formatted as follow: template_name/scheme_name/mountpoint'
            mountpoint: ': (Required) partition mount point.'
            order: ': step or order. specifies the creation order of the partition on the disk'
            raid: ': raid partition type.'
            scheme_name: ': (Required) The partition scheme name.'
            size: ': size of partition in MB, 0 => rest of the space.'
            template_name: ': (Required) The template name of the partition scheme.'
            type: ': partition type.'
            volume_name: ': The volume name needed for proxmox distribution'
        importStatements: []
    ovh_me_ipxe_script:
        subCategory: ""
        description: Creates an IPXE Script.
        name: ovh_me_ipxe_script
        title: ovh_me_ipxe_script
        examples:
            - name: script
              manifest: |-
                {
                  "name": "myscript",
                  "script": "${file(\"${path.module}/boot.ipxe\")}"
                }
        argumentDocs:
            description: '- For documentation purpose only. This attribute is not passed to the OVHcloud API as it cannot be retrieved back. Instead a fake description (''$name auto description'') is passed at creation time.'
            name: '- (Required) The name of the IPXE Script.'
            script: '- (Required) The content of the script.'
        importStatements: []
    ovh_me_ssh_key:
        subCategory: ""
        description: Creates an SSH Key.
        name: ovh_me_ssh_key
        title: ovh_me_ssh_key
        examples:
            - name: mykey
              manifest: |-
                {
                  "key": "ssh-ed25519 AAAAC3...",
                  "key_name": "mykey"
                }
        argumentDocs:
            default: '- True when this public SSH key is used for rescue mode and reinstallations.'
            key: '- (Required) The content of the public key in the form "ssh-algo content", e.g. "ssh-ed25519 AAAAC3...".'
            key_name: '- (Required) The friendly name of this SSH key.'
        importStatements: []
    ovh_vrack:
        subCategory: ""
        description: Orders a vrack.
        name: ovh_vrack
        title: ovh_vrack
        examples:
            - name: vrack
              manifest: |-
                {
                  "description": "my vrack",
                  "name": "my vrack",
                  "ovh_subsidiary": "${data.ovh_order_cart.mycart.ovh_subsidiary}",
                  "payment_mean": "fidelity",
                  "plan": [
                    {
                      "duration": "${data.ovh_order_cart_product_plan.vrack.selected_price.0.duration}",
                      "plan_code": "${data.ovh_order_cart_product_plan.vrack.plan_code}",
                      "pricing_mode": "${data.ovh_order_cart_product_plan.vrack.selected_price.0.pricing_mode}"
                    }
                  ]
                }
              references:
                ovh_subsidiary: data.ovh_order_cart.mycart.ovh_subsidiary
                plan.duration: data.ovh_order_cart_product_plan.vrack.selected_price.0.duration
                plan.plan_code: data.ovh_order_cart_product_plan.vrack.plan_code
                plan.pricing_mode: data.ovh_order_cart_product_plan.vrack.selected_price.0.pricing_mode
        argumentDocs:
            catalog_name: '- Catalog name'
            configuration: '- (Optional) Representation of a configuration item for personalizing product'
            date: '- date'
            description: '- yourvrackdescription'
            details: '- Information about a Bill entry'
            domain: '- expiration date'
            duration: '- (Required) duration'
            expiration_date: '- expiration date'
            label: '- (Required) Identifier of the resource'
            name: '- yourvrackname'
            order: '- Details about an Order'
            order_detail_id: '- order detail id'
            order_id: '- order id'
            ovh_subsidiary: '- (Required) OVHcloud Subsidiary'
            payment_mean: '- (Required) OVHcloud payment mode (One of "default-payment-mean", "fidelity", "ovh-account")'
            plan: '- (Required) Product Plan to order'
            plan_code: '- (Required) Plan code'
            plan_option: '- (Optional) Product Plan to order'
            pricing_mode: '- (Required) Pricing model identifier'
            quantity: '- quantity'
            service_name: '- The internal name of your vrack'
            value: '- (Required) Path to the resource in API.OVH.COM'
        importStatements: []
    ovh_vrack_cloudproject:
        subCategory: ""
        description: Attach a Public Cloud Project to a VRack.
        name: ovh_vrack_cloudproject
        title: vrack_cloudproject
        examples:
            - name: vcp
              manifest: |-
                {
                  "project_id": "67890",
                  "service_name": "12345"
                }
        argumentDocs:
            project_id: |-
                - (Required) The id of the public cloud project. If omitted,
                the OVH_CLOUD_PROJECT_SERVICE environment variable is used.
            service_name: |-
                - (Required) The service name of the vrack. If omitted,
                the OVH_VRACK_SERVICE environment variable is used.
        importStatements: []
    ovh_vrack_dedicated_server:
        subCategory: ""
        description: Attach a Dedicated Server to a VRack.
        name: ovh_vrack_dedicated_server
        title: vrack_dedicated_server
        examples:
            - name: vds
              manifest: |-
                {
                  "server_id": "67890",
                  "service_name": "XXXX"
                }
        argumentDocs:
            server_id: '- (Required) The id of the dedicated server.'
            service_name: |-
                - (Required) The service name of the vrack. If omitted,
                the OVH_VRACK_SERVICE environment variable is used.
        importStatements: []
    ovh_vrack_dedicated_server_interface:
        subCategory: ""
        description: Attach a Dedicated Server Network Interface to a VRack.
        name: ovh_vrack_dedicated_server_interface
        title: vrack_dedicated_server_interface
        examples:
            - name: vdsi
              manifest: |-
                {
                  "interface_id": "67890",
                  "service_name": "12345"
                }
        argumentDocs:
            interface_id: '- (Required) The id of dedicated server network interface.'
            service_name: |-
                - (Required) The id of the vrack. If omitted,
                the OVH_VRACK_SERVICE environment variable is used.
        importStatements: []
    ovh_vrack_iploadbalancing:
        subCategory: ""
        description: Attach a IP Loadbalanging to a VRack.
        name: ovh_vrack_iploadbalancing
        title: vrack_iploadbalancing
        examples:
            - name: viplb
              manifest: |-
                {
                  "ip_loadbalancing": "yyy",
                  "service_name": "xxx"
                }
        argumentDocs:
            ip_loadbalancing: '- (Required) The id of the IP Load Balancing.'
            service_name: '- (Required) The id of the vrack.'
        importStatements: []
    ovh_vracks:
        subCategory: ""
        description: Get the list of Vrack ids available for your OVHcloud account.
        name: ovh_vracks
        title: ovh_vracks
        argumentDocs:
            result: '- The list of vrack service name available for your OVHcloud account.'
        importStatements: []
    vps:
        subCategory: ""
        description: Get information of a vps associatd with your OVJ Account
        name: vps
        title: vps
        argumentDocs:
            cluster: '- The OVHcloud cluster the vps is in'
            datacenter: '- The datacenter in which the vps is located'
            datacenter.longname: '- The fullname of the datacenter (ex: "Strasbourg SBG1")'
            datacenter.name: '- The short name of the datacenter (ex: "sbg1)'
            displayname: '- The displayed name in the OVHcloud web admin'
            ips: '- The list of IPs addresses attached to the vps'
            keymap: '- The keymap for the ip kvm, valid values "", "fr", "us"'
            memory: '- The amount of memory in MB of the vps.'
            model: '- A dict describing the type of vps.'
            model.name: '- The model name (ex: model1)'
            model.offer: '- The model human description (ex: "VPS 2016 SSD 1")'
            model.version: '- The model version (ex: "2017v2")'
            netbootmode: '- The source of the boot kernel'
            offertype: '- The type of offer (ssd, cloud, classic)'
            service_name: '- (Required) The service_name of your dedicated server.'
            slamonitoring: '- A boolean to indicate if OVHcloud SLA monitoring is active.'
            state: '-  The state of the vps'
            type: '- The type of server'
            vcore: '- The number of vcore of the vps'
            zone: '- The OVHcloud zone where the vps is'
        importStatements: []
