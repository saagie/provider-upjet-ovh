apiVersion: user.cloud.ovh.upbound.io/v1alpha1
kind: S3Policy
metadata:
  annotations:
    meta.upbound.io/example-id: user/v1alpha1/s3policy
  labels:
    testing.upbound.io/example-name: policy
  name: policy
spec:
  forProvider:
    policy: |-
      ${jsonencode({
          "Statement":[{
            "Sid": "RWContainer",
            "Effect": "Allow",
            "Action":["s3:GetObject", "s3:PutObject", "s3:DeleteObject", "s3:ListBucket", "s3:ListMultipartUploadParts", "s3:ListBucketMultipartUploads", "s3:AbortMultipartUpload", "s3:GetBucketLocation"],
            "Resource":["arn:aws:s3:::hp-bucket", "arn:aws:s3:::hp-bucket/*"]
          }]
        })}
    serviceName: ${ovh_cloud_project_user.user.service_name}
    userIdSelector:
      matchLabels:
        testing.upbound.io/example-name: user

---

apiVersion: user.cloud.ovh.upbound.io/v1alpha1
kind: User
metadata:
  annotations:
    meta.upbound.io/example-id: user.cloud/v1alpha1/s3policy
  labels:
    testing.upbound.io/example-name: user
  name: user
spec:
  forProvider:
    description: my user
    roleNames:
    - objectstore_operator
    serviceName: XXX

---

